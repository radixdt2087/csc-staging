<?php
 use Tygh\Registry; if (!defined('BOOTSTRAP')) { die('Access denied'); } if ($_SERVER['REQUEST_METHOD'] == 'POST') { $suffix = '.manage'; $product_ids = array(); if ($mode == 'export_product') { $product_ids = fn_sd_amazon_products_export_import($_REQUEST); if (empty($product_ids)) { fn_set_notification('E', __('error'), __('sd_amazon_products_empty')); } if (empty($_REQUEST['region']) || empty($product_ids)) { return; } return fn_amazon_export_products($product_ids, $_REQUEST['region']); } elseif ($mode == 'm_export_product') { $dispatch_extra = Registry::get('runtime.dispatch_extra'); if (!empty($dispatch_extra)) { $product_ids = fn_sd_amazon_products_export_import($_REQUEST); } if (empty($product_ids)) { fn_set_notification('E', __('error'), __('sd_amazon_products_empty')); } if (empty($dispatch_extra) || empty($product_ids)) { return; } if (!empty($product_ids) && is_array($product_ids)) { return fn_amazon_export_products($product_ids, $dispatch_extra); } } if ($mode == 'import_product') { $product_ids = fn_sd_amazon_products_export_import($_REQUEST); if (empty($product_ids)) { fn_set_notification('E', __('error'), __('sd_amazon_products_empty')); } if (empty($_REQUEST['region']) || empty($product_ids)) { return; } $result = fn_amazon_import_products($product_ids, $_REQUEST['region']); if ($result == NEED_REDIRECT && count($product_ids) == 1) { $suffix = '.update&product_id=' .reset($product_ids); } else { return $result; } } elseif ($mode == 'm_import_product') { $dispatch_extra = Registry::get('runtime.dispatch_extra'); if (!empty($dispatch_extra)) { $product_ids = fn_sd_amazon_products_export_import($_REQUEST); } if (empty($product_ids)) { fn_set_notification('E', __('error'), __('sd_amazon_products_empty')); } if (empty($dispatch_extra) || empty($product_ids)) { return; } if (!empty($product_ids) && is_array($product_ids)) { return fn_amazon_import_products($product_ids, $dispatch_extra); } } return array(CONTROLLER_STATUS_OK, 'products' . $suffix); } if ($mode == 'import_cron' || $mode == 'export_cron') { if (!empty($_REQUEST['key']) && $_REQUEST['key'] == Registry::get('addons.sd_amazon_products.cron_key')) { $addon = Registry::get('addons.sd_amazon_products'); $market_lang = $addon['market_selectbox']; $amazon_config = fn_get_amazon_config($market_lang); $company_id = !empty($_REQUEST['company_id']) ? $_REQUEST['company_id'] : ''; if (!empty($company_id)) { $is_exist = db_get_field("SELECT company_id FROM ?:companies WHERE company_id = ?i", $company_id); if (!$is_exist) { fn_echo(__('company_not_found') . PHP_EOL); exit; } } if (!empty($amazon_config['merchantId'])) { $product_ids = fn_sd_amazon_products_get_products_for_synchronization($company_id); $product_ids = fn_sd_amazon_products_check_product_ids($product_ids, false, true); if (!$product_ids) { fn_echo(__('empty_products') . PHP_EOL); exit; } if ($mode == 'import_cron') { fn_amazon_import_products($product_ids, $market_lang, 'cron'); } if ($mode == 'export_cron') { fn_amazon_export_products($product_ids, $market_lang, 'cron'); } } else { fn_echo(__('sd_amz_set_module_settings') . PHP_EOL); } } else { fn_echo(__('access_denied')); } exit; } 