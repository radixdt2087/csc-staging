<?php
 use Tygh\Registry; use Tygh\Tygh; if (!defined('BOOTSTRAP')) { die('Access denied'); } if ($_SERVER['REQUEST_METHOD'] == 'POST') { return array(CONTROLLER_STATUS_OK); } if ($mode == 'update') { if (empty($_REQUEST['product_id'])) { return; } Registry::set('navigation.tabs.amazon', array( 'title' => __('amazon'), 'js' => true )); Tygh::$app['view']->assign('amz_conditions', fn_get_amazon_conditions()); } elseif ($mode == 'm_update') { $field_groups = Tygh::$app['view']->getTemplateVars('field_groups'); $field_names = Tygh::$app['view']->getTemplateVars('field_names'); $filled_groups = Tygh::$app['view']->getTemplateVars('filled_groups'); if (!empty($field_names['amz_condition'])) { $params = array(); unset($field_names['amz_condition']); $templates = fn_get_amazon_conditions(); $field_groups['S']['amz_condition'] = array( 'skip_lang' => true, 'name' => 'products_data', 'variants' => $templates ); $filled_groups['S']['amz_condition'] = 'Amazon ' . lcfirst(__('condition')); } if (!empty($field_names['amz_synchronization'])) { $params = array(); unset($field_names['amz_synchronization']); $field_groups['C']['amz_synchronization'] = 'products_data'; $filled_groups['C']['amz_synchronization'] = __('sd_amz_synchronization'); } Tygh::$app['view']->assign(array( 'field_groups' => $field_groups, 'filled_groups' => $filled_groups, 'field_names' => $field_names )); } 