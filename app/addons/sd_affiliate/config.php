<?php
 use Tygh\Registry; defined('BOOTSTRAP') or die('Access denied'); fn_define('ORDER_DATA_AFFILIATE_INFO', 'J'); fn_define('AFFILIATE_DATA_TYPE_ORDER', 'O'); fn_define('AFFILIATE_DATA_TYPE_PRODUCT', 'P'); fn_define('AFFILIATE_DATA_TYPE_DISCOUNT', 'D'); fn_define('AFFILIATE_DATA_TYPE_LEVEL', 'L'); fn_define('AFFILIATE_DATA_TYPE_REFERER', 'R'); fn_define('AFFILIATE_DATA_TYPE_AFFILIATE', 'A'); fn_define('AFFILIATE_COOKIE_NAME', 'partner_id'); fn_define('SECONDS_IN_WEEK', SECONDS_IN_DAY * 7); fn_define('SECONDS_IN_FORTNIGHT', SECONDS_IN_DAY * 15); fn_define('BASE_D', 22); fn_define('INDEX_D', 'VYMSCEDJHIXBLNPQRGKTUW'); if (AREA == 'C') { if (empty(Tygh::$app['session']['partner_data'])) { Tygh::$app['session']['partner_data'] = []; } $partner_id = fn_get_cookie('partner_id'); if (empty(Tygh::$app['session']['partner_data']['partner_id']) && !empty($partner_id)) { Tygh::$app['session']['partner_data']['partner_id'] = $partner_id; } if ((empty(Tygh::$app['session']['auth']['user_id']) || empty(Tygh::$app['session']['partner_data']['partner_id'])) && empty($partner_id) ) { if (!empty($_REQUEST['aff_id'])) { Tygh::$app['session']['partner_data']['partner_id'] = $_REQUEST['aff_id']; } elseif (!empty($_REQUEST['partner_id'])) { Tygh::$app['session']['partner_data']['partner_id'] = $_REQUEST['partner_id']; } } } $abs = ['A' => 'absolute']; $abs_and_per = ['A' => 'absolute', 'P' => 'percent']; $payout_types = [ 'show' => [ 'id' => 'show', 'title' => 'payout_show', 'value_types' => $abs, 'default' => 'Y', ], 'click' => [ 'id' => 'click', 'title' => 'payout_click', 'value_types' => $abs, 'default' => 'Y', ], 'click_ref' => [ 'id' => 'click_ref', 'title' => 'payout_click_ref', 'value_types' => $abs, 'default' => 'Y', ], 'sale' => [ 'id' => 'sale', 'title' => 'payout_sales', 'value_types' => $abs_and_per, 'default' => 'Y', 'tooltip' => (fn_allowed_for('MULTIVENDOR')) ? 'affiliate.payout_sales_note_mv' : 'affiliate.payout_sales_note', ], 'new_customer' => [ 'id' => 'new_customer', 'title' => 'new_customer', 'value_types' => $abs, 'default' => 'Y', ], 'new_partner' => [ 'id' => 'new_partner', 'title' => 'payout_new_partner', 'value_types' => $abs, 'default' => 'Y', ], 'use_coupon' => [ 'id' => 'use_coupon', 'title' => 'payout_use_coupon', 'value_types' => $abs_and_per, 'default' => 'N', ], 'init_balance' => [ 'id' => 'init_balance', 'title' => 'payout_init_balance', 'value_types' => $abs, 'default' => 'N', ] ]; $use_multiple_promotions = Registry::get("addons.sd_affiliate.use_multiple_promotions"); if ($use_multiple_promotions == 'N') { $payout_types['use_coupon']['default'] = 'Y'; } if (fn_allowed_for('MULTIVENDOR')) { $payout_types['new_vendor'] = [ 'id' => 'new_vendor', 'title' => 'new_vendor', 'value_types' => $abs, 'default' => 'Y', ]; } Registry::set('payout_types', $payout_types); Registry::set('affiliate_controllers', [ 'aff_statistics', 'affiliate_plans', 'banner_products', 'banners_manager', 'partners', 'payouts' ]); 