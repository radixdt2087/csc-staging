<?php
 use Tygh\Registry; use Tygh\Languages\Languages; use Tygh\Enum\AffiliateAction; use Tygh\Enum\AffiliateStatuses; use Tygh\Enum\BannerLinkTypes; use Tygh\Enum\BannerTypes; use Tygh\Enum\AffiliateUserTypes; use Tygh\Enum\ImagePairTypes; use Tygh\Enum\UserStatuses; use Tygh\Settings; use Tygh\Http; use Tygh\Addons\SchemesManager; use Tygh\Database\Connection; use Tygh\Enum\AffiliateUserGroupTypes; defined('BOOTSTRAP') or die('Access denied'); function sd_OTE4MjU4YzQ2Y2VjMjNhMDUxYjVhMjk5() { $affiliate_old_id = db_get_fields( 'SELECT user_id' . ' FROM ?:users' . ' WHERE user_type = ?s', AffiliateUserTypes::PARTNER ); $data = [ 'user_id' => '', 'approved' => 'N', 'plan_id' => '0', 'balance' => '0.00', 'referrer_partner_id' => '0', ]; if (!empty($affiliate_old_id)) { foreach ($affiliate_old_id as $id) { $data['user_id'] = $id; db_query('INSERT INTO ?:aff_partner_profiles ?e', $data); } } } function sd_ZjZiOGQ2NDdlM2UyNDM2NDA5NjZiNTcz() { db_query('UPDATE ?:profile_fields SET partner_show = profile_show, partner_required = profile_required'); } function sd_MDBhODNjODM0YTFkZTM2MmE0MjY0ODlm() { $service = Tygh::$app['template.mail.service']; $service->removeTemplateByCodeAndArea('affiliate_approve_user', 'A'); $service->removeTemplateByCodeAndArea('affiliate_decline_user', 'A'); $service->removeTemplateByCodeAndArea('affiliate_create_user', 'A'); $service->removeTemplateByCodeAndArea('new_affiliate_notification', 'A'); $template_codes = ['affiliate_approve_user', 'affiliate_decline_user', 'affiliate_create_user']; $template_codes = [ 'affiliate_approve_user', 'affiliate_decline_user', 'affiliate_create_user', 'new_affiliate_notification' ]; $area = 'A'; db_query('DELETE FROM ?:template_emails WHERE code IN (?a) AND area = ?s', $template_codes, $area); } function sd_NzNmOWM1NDk0YTAyOTU0YTQ1Y2YwZjU4($license = '') { if (!fn_allowed_for('MULTIVENDOR')) { $companies = db_get_array('SELECT storefront, secure_storefront FROM ?:companies'); } else { $companies = [['storefront' => fn_url('', 'C', 'http')]]; } $addon = 'sd_affiliate'; $request = [ 'companies' => $companies, 'host' => Registry::get('config.current_host'), 'lang_code' => CART_LANGUAGE, 'addon' => $addon, 'addon_version' => fn_get_addon_version($addon), 'license' => !empty($license) ? trim($license) : Registry::get("addons.{$addon}.lkey"), ]; Registry::set('log_cut', true); $response = Http::get( base64_decode('aHR0cHM6Ly93d3cuc2ltdGVjaGRldi5jb20vaW5kZXgucGhwP2Rpc3BhdGNoPWxpY2Vuc2VzLmNoZWNr'), ['request' => urlencode(json_encode($request))], ['timeout' => 3] ); if (Http::getStatus() == Http::STATUS_OK) { $response_data = json_decode($response, true); if ($response_data !== null) { $status = isset($response_data['status']) ? $response_data['status'] : 'F'; if (isset($response_data['notice'])) { fn_set_notification( isset($response_data['type']) ? $response_data['type'] : 'W', SchemesManager::getName($addon, CART_LANGUAGE), $response_data['notice'], isset($response_data['state']) ? $response_data['state'] : '' ); } } else { $status = $response; } if ($status != 'A') { fn_update_addon_status($addon, 'D', false); } } else { $status = 'A'; } return $status == 'A'; } function fn_settings_actions_addons_sd_affiliate_lkey(&$new_value, $old_value) { if (sd_NzNmOWM1NDk0YTAyOTU0YTQ1Y2YwZjU4($new_value)) { $new_value = trim($new_value); } } function fn_settings_actions_addons_sd_affiliate(&$new_status, $old_status) { if ($new_status == 'A' && !sd_NzNmOWM1NDk0YTAyOTU0YTQ1Y2YwZjU4()) { $new_status = 'D'; } } function sd_OThmZmQwZDhlZmEwNjg5NjJlYTA2NjY0($user_data) { if (AREA == 'A' && $user_data['is_root'] == 'Y') { sd_NzNmOWM1NDk0YTAyOTU0YTQ1Y2YwZjU4(); } } function sd_MTBmNWI1NWUwYzhlMTc3YjljNDU0Yjkx( $types = [BannerTypes::TEXT, BannerTypes::GRAPHICS], $links_to = [BannerLinkTypes::CATEGORIES, BannerLinkTypes::PRODUCTS, BannerLinkTypes::URL], $is_avail = false, $lang_code = CART_LANGUAGE ) { $conditions = []; if (!empty($types)) { $conditions[] = db_quote('AND ?:aff_banners.type IN (?a)', $types); } if (!empty($links_to)) { $conditions[] = db_quote('AND ?:aff_banners.link_to IN (?a)', $links_to); } if (!empty($is_avail)) { $conditions[] = db_quote('AND ?:aff_banners.status = ?s', AffiliateStatuses::ACTIVE); } if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $conditions[] = db_quote('AND ?:aff_banners.company_id = ?i', Registry::get('runtime.company_id')); } } $fields = [ '?:aff_banners.*', '?:aff_banner_descriptions.title', '?:aff_banner_descriptions.content', '?:aff_banner_descriptions.alt', '?:aff_banner_images.banner_image_id' ]; $banners = db_get_hash_array( 'SELECT ?p' . ' FROM ?:aff_banners' . ' LEFT JOIN ?:aff_banner_descriptions ON ?:aff_banner_descriptions.banner_id = ?:aff_banners.banner_id' . ' AND ?:aff_banner_descriptions.lang_code = ?s ' . ' LEFT JOIN ?:aff_banner_images ON ?:aff_banner_images.banner_id = ?:aff_banners.banner_id' . ' AND ?:aff_banner_images.lang_code = ?s' . ' WHERE 1 ?p' . ' ORDER BY ?:aff_banner_descriptions.title', 'banner_id', implode(', ', $fields), $lang_code, $lang_code, implode(' ', $conditions) ); $banner_image_ids = array_column($banners, 'banner_image_id'); $images = sd_ZmU2ZDJiZmFjZTIwODZhY2U3ODlkYzc2($banner_image_ids, 'image', $lang_code); if (!empty($banners) && is_array($banners)) { foreach ($banners as $banner_id => $banner_data) { $banners[$banner_id] = sd_NmQ3NmRjM2YzYmRlNjZiNDJjOTUxMjZk($banner_data); $banners[$banner_id]['main_pair'] = !empty($images[$banner_data['banner_image_id']]) ? reset($images[$banner_data['banner_image_id']]) : []; } } return $banners; } function sd_NzZiZjM1NmI2ODU2NzU5ODBlZTUwZjQ2($banner_id, $lang_code = CART_LANGUAGE) { $title = false; if (!empty($banner_id)) { $title = db_get_field( 'SELECT title' . ' FROM ?:aff_banner_descriptions' . ' WHERE banner_id = ?i AND lang_code = ?s', $banner_id, $lang_code ); } return $title; } function sd_ZmU2ZDJiZmFjZTIwODZhY2U3ODlkYzc2($banner_image_id, $image_key = 'image', $lang_code = CART_LANGUAGE) { $image_data = fn_get_image_pairs($banner_image_id, 'aff_images', ImagePairTypes::MAIN, true, false, $lang_code); return $image_data; } function sd_OTMzMzY4NmVjZTkyODA0OTA1MjI4NDlm($banner_id, $lang_code = CART_LANGUAGE, $avail_only = false) { $banner_data = false; if (!empty($banner_id)) { $status_condition = ''; if ($avail_only == true) { $status_condition = db_quote(' AND status = ?s', AffiliateStatuses::ACTIVE); } $fields = [ '?:aff_banners.*', '?:aff_banner_descriptions.title', '?:aff_banner_descriptions.content', '?:aff_banner_descriptions.alt', '?:aff_banner_images.banner_image_id' ]; $join = db_quote( 'LEFT JOIN ?:aff_banner_descriptions ON ?:aff_banner_descriptions.banner_id = ?:aff_banners.banner_id' . ' AND ?:aff_banner_descriptions.lang_code = ?s', $lang_code ); $join .= db_quote( ' LEFT JOIN ?:aff_banner_images ON ?:aff_banner_images.banner_id = ?:aff_banners.banner_id' . ' AND ?:aff_banner_images.lang_code = ?s', $lang_code ); $banner_data = db_get_row( 'SELECT ?p' . ' FROM ?:aff_banners ?p' . ' WHERE ?:aff_banners.banner_id = ?i ?p', implode(", ", $fields), $join, $banner_id, $status_condition ); $banner_data = sd_NmQ3NmRjM2YzYmRlNjZiNDJjOTUxMjZk($banner_data); if (!empty($banner_data['type']) && $banner_data['type'] == BannerTypes::GRAPHICS) { $image_data = sd_ZmU2ZDJiZmFjZTIwODZhY2U3ODlkYzc2($banner_data['banner_image_id'], 'image', $lang_code); if (!empty($image_data)) { $banner_data['main_pair'] = $image_data; } } } return $banner_data; } function sd_NmQ3NmRjM2YzYmRlNjZiNDJjOTUxMjZk($banner_data) { if (!empty($banner_data)) { $banner_data['title'] = empty($banner_data['title']) ? '' : $banner_data['title']; $banner_data['content'] = empty($banner_data['content']) ? '' : $banner_data['content']; if (!empty($banner_data['data']) && !empty($banner_data['type'])) { if (!empty($banner_data['link_to']) && in_array($banner_data['type'], [BannerTypes::TEXT, BannerTypes::GRAPHICS]) ) { if ($banner_data['link_to'] == BannerLinkTypes::CATEGORIES) { $banner_data['categories'] = fn_get_category_name($banner_data['data'], CART_LANGUAGE, true); } elseif ($banner_data['link_to'] == BannerLinkTypes::PRODUCTS) { $banner_data['products'] = fn_get_product_name($banner_data['data'], CART_LANGUAGE, true); } elseif ($banner_data['link_to'] == BannerLinkTypes::URL) { $banner_data['url'] = $banner_data['data']; } elseif ($banner_data['link_to'] == BannerLinkTypes::PRODUCT_GROUPS) { $banner_data['group_id'] = $banner_data['data']; $banner_data['group_name'] = sd_YzZmZWU1MDViOGUzMDhjMDA2NjAyNjU2($banner_data['group_id']); } } elseif ($banner_data['type'] == BannerTypes::PRODUCTS) { $data = unserialize($banner_data['data']); $banner_data = fn_array_merge($banner_data, $data, true); unset($banner_data['data'], $data); } } } return $banner_data; } function sd_YjAzNjg2YzlmZDJlNTM2MmJjOGVlNjIy($banner_data, $partner_id = '', $lang_code = CART_LANGUAGE) { if (empty($banner_data['banner_id'])) { return false; } $banner_url = fn_url("aff_banners.view?bid={$banner_data['banner_id']}&sl=$lang_code", 'C'); if (!empty($partner_id)) { $banner_url .= "&aff_id=$partner_id"; } return $banner_url; } function sd_Mzg0ODk0NjJmMjQ1NGI2MGU0YTRhNWYz($type, $banner_data, $mode = '', $partner_id = '', $lang_code = CART_LANGUAGE) { $banner_correct = true; $auth = &Tygh::$app['session']['auth']; if ((empty($banner_data['banner_id']) || empty($banner_data['type'])) && $mode != 'demo') { return false; } $banner_data['banner_url'] = sd_YjAzNjg2YzlmZDJlNTM2MmJjOGVlNjIy($banner_data, $partner_id, $lang_code); $banner_data['flash_vars'] = "sl=$lang_code" . (empty($partner_id) ? '' : "&aff_id=$partner_id"); if ($banner_data['type'] == BannerTypes::PRODUCTS) { $condition = ''; $join = ''; if (!empty($partner_id)) { $plan_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($partner_id); if (!empty($plan_data['product_ids'])) { $condition1 = db_quote('(?:products.product_id IN (?n))', array_keys($plan_data['product_ids'])); } if (!empty($plan_data['category_ids'])) { $condition2 = db_quote('(category_id IN (?n))', array_keys($plan_data['category_ids'])); $join .= ' LEFT JOIN ?:products_categories ON ?:products.product_id = ?:products_categories.product_id '; } $condition .= (!empty($condition1) && !empty($condition2)) ? " AND ($condition1 OR $condition2) " : (!empty($condition1) ? " AND $condition1 " : (!empty($condition2) ? " AND $condition2 " : '')); } if (!empty($banner_data['product_ids'])) { $condition .= db_quote(' AND ?:products.product_id IN (?n)', explode('-', $banner_data['product_ids'])); } $prod_cnt = db_get_field( 'SELECT COUNT(*)' . ' FROM ?:products ?p' . ' WHERE status = ?s ?p', $join, AffiliateStatuses::ACTIVE, $condition ); $product_id = db_get_field( 'SELECT ?:products.product_id' . ' FROM ?:products ?p' . ' WHERE status = ?s ?p' . ' LIMIT ?i, ?i', $join, AffiliateStatuses::ACTIVE, $condition, rand(0, $prod_cnt - 1), 1 ); if (!empty($product_id)) { $banner_data['product_id'] = $product_id; if ($mode != 'demo') { $banner_data['banner_url'] .= "&product_id={$banner_data['product_id']}"; } else { $banner_data['banner_url'] = ''; } $prod_data = fn_get_product_data( $product_id, $auth, $lang_code, '?:products.product_id, ?:products.company_id, product, full_description as product_full_description, ' . 'short_description as product_short_description, ?:products.product_code', false, true, false ); if (isset($prod_data['short_description'])) { unset($prod_data['short_description']); } $banner_data = fn_array_merge($banner_data, $prod_data); if (!empty($banner_data['main_pair']['icon']['image_path'])) { $banner_data['main_pair']['icon']['image_path'] = 'http://' . Registry::get('config.http_host') . $banner_data['main_pair']['icon']['image_path']; } } else { $banner_correct = false; $banner_data['type'] = BannerTypes::TEXT; $banner_data['link_to'] = BannerLinkTypes::URL; $banner_data['show_title'] = 'N'; $banner_data['content'] = '<div align="center" style="font-family: tahoma, arial; font-size: 12px;">' . __('warning') . '</div><hr size="0" style="border-top: #3b67d2 1px solid;" />' . '<span style="font-family: tahoma, arial; font-size: 10px; color: #3b67d2;">' . __('text_no_products_found') . '</span>'; } } if (in_array($type, ['js_content', 'iframe'])) { $banner_data['border'] = (empty($banner_data['border']) || $banner_data['border'] != 'Y') ? '' : 'style="border: #999999 1px solid;"'; } if (@$banner_data['type'] == BannerTypes::GRAPHICS) { $image_data = sd_ZmU2ZDJiZmFjZTIwODZhY2U3ODlkYzc2($banner_data['banner_id'], 'icon', $lang_code); if (!empty($image_data)) { $banner_data = fn_array_merge($banner_data, $image_data); } } if ((!empty($banner_data['width']) || !empty($banner_data['height']))) { $banner_data['wh_style'] = 'style="' . (!empty($banner_data['width']) ? "width:{$banner_data['width']}px;" : '') . (!empty($banner_data['height']) ? "height:{$banner_data['height']}px;" : '') . '"'; } else { $banner_data['wh_style'] = ''; } Tygh::$app['view']->assign('partner_id', $partner_id); Tygh::$app['view']->assign('banner_type', $type); Tygh::$app['view']->assign('mode', $mode); Tygh::$app['view']->assign('banner_data', $banner_data); Tygh::$app['view']->assign('affiliate_opts_settings', Registry::get('addons.sd_affiliate')); $html_content = trim(Tygh::$app['view']->fetch('addons/sd_affiliate/views/banners_manager/components/banner_content.tpl')); if ($type == 'js_content') { $html_content = fn_js_escape($html_content); } $url_parse = preg_replace('/(^http(s)*:)\/\//i', '//', $html_content); Tygh::$app['view']->assign('http_url', $url_parse); Tygh::$app['view']->assign('html_content', $html_content); $return_content = ''; if (($type == 'js' && $mode == 'demo') || $type == 'js_content') { $return_content .= fn_get_contents(Registry::get('config.dir.root') . '/js/addons/sd_affiliate/banner_script.js'); } $return_content .= trim(Tygh::$app['view']->fetch('addons/sd_affiliate/views/banners_manager/components/banner.tpl')); if (in_array($type, ['iframe_content', 'js_content']) && !empty($partner_id) && $banner_correct) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( 'show', $banner_data['banner_id'], $partner_id, '', [AFFILIATE_DATA_TYPE_REFERER => !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''] ); } return $return_content; } function sd_YzZmZWU1MDViOGUzMDhjMDA2NjAyNjU2($group_id, $lang_code = CART_LANGUAGE) { $name = false; if (!empty($group_id)) { $name = db_get_field( 'SELECT name' . ' FROM ?:aff_group_descriptions' . ' WHERE group_id = ?i AND lang_code = ?s', $group_id, $lang_code ); } return $name; } function sd_NTAzY2FlNTk4M2U0NmExMDRhMWUwN2Rl($group_id, $lang_code = CART_LANGUAGE, $avail_only = false) { $group_data = false; if (!empty($group_id)) { $status_condition = ''; if ($avail_only == true) { $status_condition = db_quote(' AND status = ?s', AffiliateStatuses::ACTIVE); } $group_data = db_get_row( 'SELECT * FROM ?:aff_groups' . ' LEFT JOIN ?:aff_group_descriptions ON ?:aff_group_descriptions.group_id = ?:aff_groups.group_id' . ' AND ?:aff_group_descriptions.lang_code = ?s' . ' WHERE ?:aff_groups.group_id = ?i ?p', $lang_code, $group_id, $status_condition ); $group_data = sd_NWMyZGQ5N2ViNTk2NDkxYzdkNGJkZjM5($group_data); } return $group_data; } function sd_NWMyZGQ5N2ViNTk2NDkxYzdkNGJkZjM5($group_data) { if (!empty($group_data)) { $group_data['name'] = empty($group_data['name']) ? '' : $group_data['name']; if (!empty($group_data['link_to']) && !empty($group_data['data'])) { if ($group_data['link_to'] == BannerLinkTypes::CATEGORIES) { $group_data['categories'] = fn_get_category_name($group_data['data'], CART_LANGUAGE, true); } elseif ($group_data['link_to'] == BannerLinkTypes::PRODUCTS) { $group_data['product_ids'] = explode(',', $group_data['data']); } elseif ($group_data['link_to'] == BannerLinkTypes::URL) { $group_data['url'] = $group_data['data']; } unset($group_data['data']); } } return $group_data; } function sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, $lang_code = CART_LANGUAGE) { if (empty($plan_id)) { return false; } $fields = [ 'plans.plan_id', 'd.object as name', 'd.description', 'plans.payout_types', 'plans.commissions', 'plans.min_payment', 'plans.product_ids', 'plans.category_ids', 'plans.promotion_ids', 'plans.company_ids', 'plans.cookie_expiration', 'plans.status', 'plans.company_id', 'plans.method_based_selling_price', 'plans.use_coupon_commission' ]; $plan_data = db_get_row( 'SELECT ?p' . ' FROM ?:affiliate_plans as plans' . ' LEFT JOIN ?:common_descriptions as d ON d.object_holder = ?s' . ' AND d.object_id = plans.plan_id AND d.lang_code = ?s' . ' WHERE plan_id = ?i', implode(', ', $fields), 'affiliate_plans', $lang_code, $plan_id ); if (!empty($plan_data)) { if (!empty($plan_data['commissions'])) { $plan_data['commissions'] = explode(';', $plan_data['commissions']); } else { $plan_data['commissions'] = []; } $unserialize_fields = ['payout_types', 'product_ids', 'category_ids', 'company_ids', 'promotion_ids']; foreach ($unserialize_fields as $field) { if (!empty($plan_data[$field])) { $plan_data[$field] = unserialize($plan_data[$field]); } else { $plan_data[$field] = []; } } } return $plan_data; } function sd_ODJhMjFlOTZhMDc4YWEwMWRkODE2OTcx($lang_code = CART_LANGUAGE, $params = []) { $condition = db_quote('status = ?s AND plan_type = ?s', AffiliateStatuses::ACTIVE, AffiliateUserTypes::PARTNER); if (!empty($params['plan_name'])) { $condition .= db_quote('AND object LIKE ?s', '%' . $params['plan_name'] . '%'); } if (!empty($params['company_id']) && fn_allowed_for('ULTIMATE')) { $condition .= db_quote( ' AND (?:affiliate_plans.company_id = ?i' . ' OR ?i IN (SELECT share_company_id' . ' FROM ?:ult_objects_sharing' . ' WHERE ?:affiliate_plans.plan_id = share_object_id AND share_object_type = ?s))', $params['company_id'], $params['company_id'], 'affiliate_plans' ); } $join = db_quote( 'LEFT JOIN ?:common_descriptions ON plan_id = object_id' . ' AND lang_code = ?s AND object_holder = ?s ', $lang_code, 'affiliate_plans' ); $plans_list = db_get_hash_single_array( 'SELECT object_id, object' . ' FROM ?:affiliate_plans ?p' . ' WHERE ?p ORDER BY object', ['object_id', 'object'], $join, $condition ); return $plans_list; } function sd_MDE5OTU2NmQ4ZmUyNTgyNmE2NDhjM2Zl($plan_id, $lang_code = CART_LANGUAGE) { $descr = false; if (!empty($plan_id)) { $descr = db_get_field( 'SELECT object' . ' FROM ?:common_descriptions' . ' WHERE object_id = ?i AND lang_code = ?s AND object_holder = ?s', $plan_id, $lang_code, 'affiliate_plans' ); } return $descr; } function sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($partner_id, $approved_only = false, $lang_code = CART_LANGUAGE) { if (empty($partner_id)) { return false; } $partner_type = db_get_field('SELECT user_type FROM ?:users WHERE user_id = ?i', $partner_id); if ($partner_type == AffiliateUserTypes::CUSTOMER && Registry::get('addons.sd_affiliate.allow_all_customers_be_affiliates') == 'Y' ) { $plan_id = db_get_field( 'SELECT plan_id' . ' FROM ?:affiliate_plans' . ' WHERE plan_type = ?s AND status = ?s', AffiliateUserTypes::CUSTOMER, 'A' ); } elseif ($partner_type == AffiliateUserTypes::PARTNER) { $approved_condition = ''; if ($approved_only) { $approved_condition = db_quote(' AND ?:aff_partner_profiles.approved = ?s', UserStatuses::APPROVED); } $plan_id = db_get_field( 'SELECT ?:aff_partner_profiles.plan_id' . ' FROM ?:aff_partner_profiles' . ' LEFT JOIN ?:affiliate_plans ON ?:aff_partner_profiles.plan_id = ?:affiliate_plans.plan_id' . ' WHERE ?:aff_partner_profiles.user_id = ?i AND ?:affiliate_plans.status = ?s ?p', $partner_id, 'A', $approved_condition ); } if (empty($plan_id)) { return false; } return sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, $lang_code); } function sd_YzMyYjYwOWYwODE2NWUyZGM5NjE2Zjk5($partner_id, $approved_only = false) { if (empty($partner_id)) { return false; } $where_condition = ''; if ($approved_only == true) { $where_condition = db_quote(' AND approved = ?s', UserStatuses::APPROVED); } $fields = [ '?:users.user_id', '?:users.timestamp', '?:users.user_type', '?:users.status', '?:users.firstname', '?:users.lastname', '?:users.company', '?:users.email', '?:users.phone', '?:users.fax', '?:users.company_id', '?:users.partner_id', '?:aff_partner_profiles.approved', '?:aff_partner_profiles.plan_id', '?:aff_partner_profiles.balance', '?:affiliate_plans.min_payment', '?:aff_partner_profiles.coupon_code', '?:aff_partner_profiles.referrer_partner_id', ]; $partner = db_get_row( 'SELECT ?p' . ' FROM ?:users' . ' LEFT JOIN ?:aff_partner_profiles ON ?:aff_partner_profiles.user_id = ?:users.user_id' . ' LEFT JOIN ?:affiliate_plans ON ?:affiliate_plans.plan_id = ?:aff_partner_profiles.plan_id' . ' WHERE ?:users.user_id = ?i ?p', implode(', ', $fields), $partner_id, $where_condition ); if (!empty($partner['plan_id'])) { $partner['plan'] = db_get_field( 'SELECT object' . ' FROM ?:common_descriptions' . ' WHERE object_id = ?i AND object_holder = ?s AND lang_code = ?s', $partner['plan_id'], 'affiliate_plans', CART_LANGUAGE ); } return $partner; } function sd_MmM0NzU0Njk1OWUwZGYyMDY3MDcyOTBh($user_id, $update_data) { if (empty($user_id) || empty($update_data)) { return false; } $update_data['user_id'] = $user_id; $is_profile = db_get_field('SELECT COUNT(*) FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_id); if (isset($update_data['referrer_partner_id'])) { $old_referrer_partner_id = db_get_field('SELECT partner_id FROM ?:users WHERE user_id = ?i', $user_id); if ($old_referrer_partner_id != $update_data['referrer_partner_id']) { db_query( 'UPDATE ?:users' . ' SET partner_id = ?i' . ' WHERE user_id = ?i', $update_data['referrer_partner_id'], $user_id ); if (!empty($update_data['referrer_partner_id'])) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( 'new_partner', 0, $update_data['referrer_partner_id'], $user_id, [AFFILIATE_DATA_TYPE_REFERER => !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''] ); } } } if (empty($is_profile)) { $result = db_query('INSERT INTO ?:aff_partner_profiles ?e', $update_data); } else { $old_data = db_get_row('SELECT plan_id, approved FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_id); $empty_init_balance = db_get_field( 'SELECT action_id' . ' FROM ?:aff_partner_actions' . ' WHERE partner_id = ?i AND action = ?s' . ' LIMIT ?i', $user_id, 'init_balance', 1 ); $result = db_query('UPDATE ?:aff_partner_profiles SET ?u WHERE user_id = ?i', $update_data, $user_id); if (!empty($result) && !empty($update_data['plan_id']) && empty($old_data['plan_id']) && empty($empty_init_balance) ) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy('init_balance', '', $user_id); } if (Registry::get('runtime.controller') == 'profiles' && Registry::get('runtime.mode') == 'update') { if ($update_data['approved'] == 'A' && $old_data['approved'] != 'A') { $user_data = fn_get_user_info($user_id); $profile_fields = fn_get_profile_fields($user_data['user_type']); if ($user_data['user_type'] == 'P' && Registry::get('settings.General.quick_registration') == 'Y' ) { $profile_fields['C'] = ''; } $usergroups = fn_get_usergroups(); $contact_fields = []; if (!empty($profile_fields['C'])) { $contact_fields = fn_split($profile_fields['C'], 2, true, false); } $mailer = Tygh::$app['mailer']; $mailer->send([ 'to' => $user_data['email'], 'from' => 'default_company_users_department', 'data' => [ 'user_data' => $user_data, 'usergroups' => $usergroups, 'url' => $user_data['company_id'] ? fn_url('?company_id=' . $user_data['company_id'], 'C') : fn_url('', 'C'), 'is_allowed_for' => !fn_allowed_for('ULTIMATE:FREE'), 'profile_fields' => $profile_fields, 'contact_fields' => $contact_fields, ], 'template_code' => 'affiliate_approve_user', 'tpl' => 'addons/sd_affiliate/approved.tpl', 'company_id' => $user_data['company_id'], ], 'A'); } elseif ($update_data['approved'] == 'D' && $old_data['approved'] != 'D') { $user_data = fn_get_user_info($user_id); $mailer = Tygh::$app['mailer']; $mailer->send([ 'to' => $user_data['email'], 'from' => 'company_users_department', 'data' => [ 'user_data' => $user_data, 'reason_declined' => $update_data['reason_to_decline'], ], 'template_code' => 'affiliate_decline_user', 'tpl' => 'addons/sd_affiliate/declined.tpl', 'company_id' => $user_data['company_id'], ], 'A'); } } } if (isset($update_data['approved']) && $update_data['approved'] == 'A') { sdv_NTMzYTQyYWMyODViOTNlYTU1NDVjZmM0($user_id); } if (Registry::get('addons.sd_affiliate.automatic_approval_affiliates') == 'Y') { fn_set_notification('N', __('notice'), __('aff_successfully_registered'), 'S'); } return $result; } function sd_OGRkOTNiNWU5ZmZiMjk5YTE0N2IxZWI3($plan_id) { $result = false; if (empty($plan_id)) { return $result; } $plan_type = db_get_field('SELECT plan_type FROM ?:affiliate_plans WHERE plan_id = ?i', $plan_id); if ($plan_type != AffiliateUserTypes::PARTNER) { return $result; } $default_plans = db_get_fields( 'SELECT plan_id FROM ?:affiliate_plans WHERE plan_type = ?s AND is_default = ?s', $plan_type, 'Y' ); foreach ($default_plans as $default_plan_id) { db_query('UPDATE ?:affiliate_plans SET is_default="N" WHERE plan_id = ?i', $default_plan_id); } $result = db_query('UPDATE ?:affiliate_plans SET ?u WHERE plan_id = ?i', ['is_default' => 'Y'], $plan_id); return $result; } function sdv_NTMzYTQyYWMyODViOTNlYTU1NDVjZmM0($user_id) { $result = false; if (empty($user_id)) { return $result; } if (Registry::get("addons.sd_affiliate.plan_auto_set") == 'Y') { $default_plan_id = db_get_field('SELECT plan_id FROM ?:affiliate_plans WHERE is_default = ?s', 'Y'); $update_plan_data = ['plan_id' => $default_plan_id]; $result = db_query('UPDATE ?:aff_partner_profiles SET ?u WHERE user_id = ?i', $update_plan_data, $user_id); } return $result; } function sd_NTgwMGRlMGJiNGM4ZTc5YzNhZmYyNWIz($user_id) { if (empty($user_id)) { return false; } db_query('DELETE FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_id); db_query('DELETE FROM ?:aff_partner_actions WHERE partner_id = ?i AND payout_id = ?i', $user_id, 0); db_query('UPDATE ?:aff_partner_profiles SET referrer_partner_id = ?i WHERE referrer_partner_id = ?i', 0, $user_id); return true; } function sd_OTY1YzZmYTUzZGU4MDY1NzY1MGM4ZjEy($user_id, $max_level = null) { if (empty($user_id)) { return false; } $partners = sd_YzMyYjYwOWYwODE2NWUyZGM5NjE2Zjk5($user_id); if (empty($partners)) { return false; } if (!isset($max_level)) { $aff_plan = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($user_id); $max_level = empty($aff_plan['commissions']) ? 0 : count($aff_plan['commissions']); } if (empty($max_level)) { return $partners; } $partners['partners'] = []; list($related_partners) = fn_get_users( ['user_type' => AffiliateUserTypes::PARTNER, 'active' => 'Y', 'referrer_partner_id' => $user_id], Tygh::$app['session']['auth'] ); if (empty($related_partners)) { return $partners; } foreach ($related_partners as $partner) { $partners['partners'][$partner['user_id']] = sd_OTY1YzZmYTUzZGU4MDY1NzY1MGM4ZjEy( $partner['user_id'], $max_level - 1 ); } return $partners; } function sd_MjBkMzkzYTA5MzY4NGJiNDAwZTk4YjE4($user_id = '') { list($partners_list) = fn_get_users(['user_type' => AffiliateUserTypes::PARTNER, 'active' => 'Y'], $auth); if (empty($partners_list)) { return false; } $partners = []; foreach ($partners_list as $partner_data) { $partners[$partner_data['user_id']] = $partner_data; } $del_partners = []; foreach ($partners as $partner_id => $partner_data) { if (!empty($partner_data['referrer_partner_id']) && (empty($user_id) || $user_id != $partner_id)) { if (!empty($partners[$partner_data['referrer_partner_id']])) { if (empty($partners[$partner_data['referrer_partner_id']]['partners'])) { $partners[$partner_data['referrer_partner_id']]['partners'] = []; } $partners[$partner_data['referrer_partner_id']]['partners'][$partner_id] = $partners[$partner_id]; $partners[$partner_id] = &$partners[$partner_data['referrer_partner_id']]['partners'][$partner_id]; $del_partners[] = $partner_id; } } if (!empty($partner_data['firstname']) || !empty($partner_data['lastname'])) { $partners[$partner_id]['affiliate'] = $partner_data['firstname'] . ' ' . $partner_data['lastname']; } else { $partners[$partner_id]['affiliate'] = __('affiliate') . '_' . $partner_id; } } if (!empty($del_partners)) { foreach ($del_partners as $partner_id) { if (!empty($partners[$partner_id])) { unset($partners[$partner_id]); } } } if (!empty($user_id)) { $partners = empty($partners[$user_id]) ? [] : [$user_id => $partners[$user_id]]; } return $partners; } function sd_YTNhYmE0MTM3MjU4ODc1MWFlZTIzNjE1($partner_id, $amount, $action = '+') { $amount = floatval($amount); if ($amount < 0) { $amount = 0; } if (empty($partner_id) || empty($amount) || !in_array($action, ['+', '-'])) { return false; } $partner = sd_YzMyYjYwOWYwODE2NWUyZGM5NjE2Zjk5($partner_id); if (empty($partner)) { return false; } if ($action == '-' && $amount > $partner['balance']) { $text = '<hr />'; $text .= __('payment') . ": $amount<br />"; $text .= __('affiliate') . ": {$partner['firstname']} {$partner['lastname']}<br />"; $text .= __('balance_account') . ": $partner[balance]"; if (AREA == 'A') { fn_set_notification('E', __('error'), __('error_payout_gt_balance') . $text); } return false; } return db_query( 'UPDATE ?:aff_partner_profiles' . ' SET balance = balance ?p ?p' . ' WHERE user_id = ?i', $action, $amount, $partner_id ); } function sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( $action, $banner_id, $partner_id, $customer_id = '', $additional_data = '', $amount = '0', $multi_tier_account = false ) { fn_set_hook('add_partner_action_pre', $action, $banner_id, $partner_id, $customer_id, $additional_data, $amount, $multi_tier_account); if (empty($action) || empty($partner_id)) { return false; } $partner_type = db_get_field('SELECT user_type FROM ?:users WHERE user_id = ?i', $partner_id); if ($partner_type == AffiliateUserTypes::CUSTOMER && (Registry::get('addons.sd_affiliate.allow_all_customers_be_affiliates') == 'N' || Registry::get('addons.reward_points.status') != 'A') ) { return false; } $auth = &Tygh::$app['session']['auth']; if (!empty($auth['user_id']) && (Registry::get('addons.sd_affiliate.no_rewards_registered_users') == 'Y')) { $user_parent = db_get_field('SELECT partner_id FROM ?:users WHERE user_id = ?i', $auth['user_id']); if ($partner_id !== $user_parent) { return false; } } $payout_types = Registry::get('payout_types'); if (!$multi_tier_account && AREA != 'A') { sd_YmVkYThjZTg0NTkxMjExYjBmYmFlNWRj($partner_id); } $data = []; $data['banner_id'] = $banner_id; $data['partner_id'] = $partner_id; $data['customer_id'] = $customer_id; $data['date'] = TIME; $data['ip'] = ($action == AffiliateAction::INIT_BALANCE) ? '' : $_SERVER['REMOTE_ADDR']; $data['action'] = $action; $data['approved'] = ((($partner_type == AffiliateUserTypes::PARTNER && Registry::get('addons.sd_affiliate.automatic_approval_commissions') == 'Y') || ($partner_type == AffiliateUserTypes::CUSTOMER && Registry::get('addons.sd_affiliate.allow_all_customers_be_affiliates') == 'Y')) && $action != AffiliateAction::SALE && $action != 'use_coupon') ? 'Y' : 'N'; $data['plan_id'] = $partner_type == AffiliateUserTypes::PARTNER ? db_get_field('SELECT plan_id FROM ?:aff_partner_profiles WHERE user_id = ?i', $partner_id) : db_get_field( 'SELECT plan_id' . ' FROM ?:affiliate_plans' . ' WHERE plan_type = ?s AND status = ?s', AffiliateUserTypes::CUSTOMER, 'A' ); if ($auth['user_type'] == AffiliateUserTypes::PARTNER && !empty($auth['user_id']) && $auth['user_id'] == $partner_id ) { return false; } if (empty($data['plan_id'])) { return false; } if ($data['action'] == AffiliateAction::CLICK || $data['action'] == AffiliateAction::SHOW) { $condition = ''; if (is_numeric(Registry::get('addons.sd_affiliate.time_uniq_banner'))) { $time_uniq_banner = TIME - SECONDS_IN_DAY * Registry::get('addons.sd_affiliate.time_uniq_banner'); $condition = db_quote(' AND date > ?i', $time_uniq_banner); } $customer_ip = db_get_field( 'SELECT ip FROM ?:aff_partner_actions' . ' WHERE ip = ?s AND action = ?s AND banner_id = ?i AND partner_id = ?i ?p', $auth['ip'], $data['action'], $data['banner_id'], $data['partner_id'], $condition ); if (!empty($customer_ip)) { return false; } } if ($data['action'] == AffiliateAction::CLICK_REF) { $customer_ip = db_get_field( 'SELECT ip  FROM ?:aff_partner_actions' . ' WHERE ip = ?s AND action = ?s', $auth['ip'], $data['action'] ); if (!empty($customer_ip)) { return false; } } if ($multi_tier_account) { $data['amount'] = round($amount, 2); } elseif (!empty($payout_types[$action])) { $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($data['plan_id']); $payout_values = $plan_data['payout_types']; $p_value = false; if ($action == AffiliateAction::SALE && !empty($additional_data[AFFILIATE_DATA_TYPE_PRODUCT])) { $p_value = sd_OWIyMDI2ZjE3MzIwZjQ5MjEwM2M3NzVk($data['plan_id'], $additional_data[AFFILIATE_DATA_TYPE_PRODUCT], 'product'); if ($p_value === false) { $product_data = fn_get_product_data($additional_data[AFFILIATE_DATA_TYPE_PRODUCT], $auth); if (!empty($product_data['main_category'])) { $p_value = sd_OWIyMDI2ZjE3MzIwZjQ5MjEwM2M3NzVk($data['plan_id'], $product_data, 'category'); if ($p_value === false && !empty($product_data['company_id'])) { $p_value = sd_OWIyMDI2ZjE3MzIwZjQ5MjEwM2M3NzVk($data['plan_id'], $product_data['company_id'], 'company'); } } } } elseif ($action == 'use_coupon' && !empty($additional_data[AFFILIATE_DATA_TYPE_DISCOUNT])) { $use_multiple_promotions = Registry::get('addons.sd_affiliate.use_multiple_promotions'); if ($use_multiple_promotions == 'Y') { $payout_type = 'promotion'; } else { $payout_type = 'coupon_code'; } $p_value = sd_OWIyMDI2ZjE3MzIwZjQ5MjEwM2M3NzVk( $data['plan_id'], $additional_data[AFFILIATE_DATA_TYPE_DISCOUNT], $payout_type ); } if ($p_value === false) { if (empty($payout_values[$action]) || ($action != 'init_balance' && (empty($payout_types[$action]['default']) || $payout_types[$action]['default'] != 'Y')) ) { $p_value = ['value' => 0, 'value_type' => AFFILIATE_DATA_TYPE_AFFILIATE]; } else { $p_value = $payout_values[$action]; } } $data['amount'] = (@$p_value['value_type'] == AFFILIATE_DATA_TYPE_AFFILIATE) ? @$p_value['value'] : $amount * $p_value['value'] / 100; } if ($partner_type == AffiliateUserTypes::CUSTOMER) { $data['amount'] = round($data['amount']); } if (isset($data['amount']) && $data['amount'] <= 0) { $data['approved'] = 'N'; } $runtime_company_id = fn_get_runtime_company_id(); $data['company_id'] = !empty($runtime_company_id) ? $runtime_company_id : db_get_field('SELECT company_id FROM ?:users WHERE user_id = ?i', $partner_id); if ($partner_type == AffiliateUserTypes::CUSTOMER) { $action_id = db_query('INSERT INTO ?:aff_customer_actions ?e', $data); } else { $action_id = db_query('INSERT INTO ?:aff_partner_actions ?e', $data); } if (!empty($action_id)) { if ($partner_type == AffiliateUserTypes::CUSTOMER && $action != AffiliateAction::SALE) { fn_change_user_points($data['amount'], $partner_id, __('addons.sd_affiliate.' . $action)); sd_OTEwYjdkYmExMmVlODg2OTc5MDdhYzlk($partner_id); } if (Registry::get('addons.sd_affiliate.automatic_approval_commissions') == 'Y' && $action != AffiliateAction::SALE && $action != 'use_coupon' && $partner_type == AffiliateUserTypes::PARTNER ) { sd_YTNhYmE0MTM3MjU4ODc1MWFlZTIzNjE1($data['partner_id'], $data['amount'], '+'); } if (!empty($additional_data) && is_array($additional_data)) { foreach ($additional_data as $object_type => $object_data) { $object_type = substr($object_type, 0, 1); $object_type = strtoupper($object_type); $_data = ['action_id' => $action_id, 'object_data' => $object_data, 'object_type' => $object_type]; if ($partner_type == AffiliateUserTypes::CUSTOMER) { db_query('INSERT INTO ?:aff_customer_action_links ?e', $_data); } else { db_query('INSERT INTO ?:aff_action_links ?e', $_data); } } } if (!$multi_tier_account && $action != 'init_balance') { sd_NTk5ZjEwNWQ4NjdhNmQwYWIxMDIyNjc4( $action, $data['partner_id'], [ 'commission' => $data['amount'], 'price' => round($amount, 2) ], $action_id, $data['customer_id'], $data['banner_id'], $additional_data ); } } Registry::set('payout_types', $payout_types); return true; } function sd_NTk5ZjEwNWQ4NjdhNmQwYWIxMDIyNjc4( $action, $partner_id, $amount, $action_id, $customer_id = 0, $banner_id = 0, $additional_data = [] ) { if (empty($action) || empty($partner_id) || empty($amount) || empty($action_id)) { return false; } $referrer_partner_id = db_get_field( 'SELECT referrer_partner_id' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $partner_id ); if (empty($referrer_partner_id)) { return false; } $levels = db_get_fields('SELECT commissions FROM ?:affiliate_plans'); if (empty($levels) || !is_array($levels)) { return false; } $max_level = 0; foreach ($levels as $level) { if (empty($level)) { continue; } $ml = substr_count($level, ';') + 1; if ($ml > $max_level) { $max_level = $ml; } } if (empty($max_level)) { return false; } $referrers = []; while (!empty($referrer_partner_id) && $max_level > 0) { $referrers[] = ['referrer_id' => $referrer_partner_id]; --$max_level; $referrer_partner_id = db_get_field( 'SELECT referrer_partner_id' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $referrer_partner_id ); } $_add_data = $additional_data; foreach ($referrers as $k => $v) { $plan_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($v['referrer_id']); $add_action = false; if ($plan_data['method_based_selling_price'] == 'Y' && $action == AffiliateAction::SALE) { $_amount = $amount['price']; $add_action = true; } elseif (!empty($plan_data['commissions'][$k])) { $_amount = $amount['commission']; $add_action = true; } if ($add_action == true) { $_add_data[AFFILIATE_DATA_TYPE_LEVEL] = $k + 1; $_add_data[AFFILIATE_DATA_TYPE_AFFILIATE] = $action_id; if (!empty($_SERVER['HTTP_REFERER'])) { $_add_data[AFFILIATE_DATA_TYPE_REFERER] = $_SERVER['HTTP_REFERER']; } sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( $action, $banner_id, $v['referrer_id'], $customer_id, $_add_data, $_amount / 100 * $plan_data['commissions'][$k], true ); } } return true; } function sd_OWIyMDI2ZjE3MzIwZjQ5MjEwM2M3NzVk($plan_id, $item_id, $item_type = 'product') { if (empty($plan_id) || empty($item_id) || empty($item_type)) { return false; } if (!in_array($item_type . '_ids', fn_get_table_fields('affiliate_plans'))) { return false; } $item_ids = db_get_field("SELECT {$item_type}_ids FROM ?:affiliate_plans WHERE plan_id = ?i", $plan_id); $item_ids = unserialize($item_ids); if ($item_type === 'category') { return sd_NzVmNzQ1YWFmNTBjYTJiZGU1NDFlZjc3($item_ids, $item_id); } elseif ($item_type === 'company') { if (isset($item_ids[$item_id]['value'])) { return $item_ids[$item_id]; } } elseif (isset($item_ids[$item_id]['value'])) { return $item_ids[$item_id]; } return false; } function sd_NzVmNzQ1YWFmNTBjYTJiZGU1NDFlZjc3($categories, $product_info) { $commission = false; if (empty($categories)) { return $commission; } foreach ($product_info['category_ids'] as $category_id) { if (array_key_exists($category_id, $categories)) { $commission = $categories[$category_id]; break; } } if (empty($commission)) { $id_path = db_get_field('SELECT id_path FROM ?:categories WHERE category_id = ?i', $product_info['main_category']); $id_path_array = array_reverse(explode('/', $id_path)); foreach ($id_path_array as $category_id) { if (array_key_exists($category_id, $categories)) { $commission = $categories[$category_id]; break; } } } return $commission; } function sd_OTk2YTExNTNiMTEyZTkzYWZhNzg1YTg4($order_id, $auth, $action = '', &$partner_data) { $partner_type = db_get_field('SELECT user_type FROM ?:users WHERE user_id = ?i', $partner_data['partner_id']); if ($partner_type == AffiliateUserTypes::CUSTOMER && (Registry::get('addons.sd_affiliate.allow_all_customers_be_affiliates') == 'N' || Registry::get('addons.reward_points.status') != 'A') ) { return false; } $use_multiple_promotions = Registry::get('addons.sd_affiliate.use_multiple_promotions'); if (!empty($order_id)) { if (empty($partner_data['partner_id']) && !empty($auth['user_id'])) { if ($partner_type == AffiliateUserTypes::PARTNER) { $_data = db_get_row( 'SELECT partner_id, date' . ' FROM ?:aff_partner_actions' . ' WHERE customer_id = ?i AND action IN (?s, ?s)' . ' ORDER BY date DESC LIMIT 1', $auth['user_id'], 'new_customer', 'new_partner' ); } else { $_data = db_get_row( 'SELECT partner_id, date' . ' FROM ?:aff_customer_actions' . ' WHERE customer_id = ?i AND action IN (?s, ?s)' . ' ORDER BY date DESC LIMIT 1', $auth['user_id'], 'new_customer', 'new_partner' ); } if (!empty($_data['partner_id']) && !empty($_data['date'])) { $_plan_data = $partner_type == AffiliateUserTypes::PARTNER ? sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($_data['partner_id']) : sd_ZDU3OGQxNDE3MGNjZGJjMjkyMzdmN2Vj($_data['partner_id']); if (!empty($_plan_data['cookie_expiration']) && TIME <= ($_data['date'] + $_plan_data['cookie_expiration'] * 24 * 3600) ) { $partner_data['partner_id'] = $_data['partner_id']; } } } if (!empty($partner_data['partner_id'])) { $_data = [ 'order_id' => $order_id, 'type' => ORDER_DATA_AFFILIATE_INFO, 'data' => serialize(['partner_id' => $partner_data['partner_id']]), ]; db_query('REPLACE INTO ?:order_data ?e', $_data); } else { db_query('DELETE FROM ?:order_data WHERE order_id = ?i AND type = ?s', $order_id, ORDER_DATA_AFFILIATE_INFO); } $order = fn_get_order_info($order_id); if (!empty($partner_data['partner_id']) && !empty($order['products'])) { if (empty($_plan_data)) { $_plan_data = $partner_type == AffiliateUserTypes::PARTNER ? sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($partner_data['partner_id']) : sd_ZDU3OGQxNDE3MGNjZGJjMjkyMzdmN2Vj($partner_data['partner_id']); } if (@$_plan_data['use_coupon_commission'] == 'Y' && !empty($partner_data['promotion_ids']) && !empty($order['coupons']) ) { foreach ($order['coupons'] as $coupon_code => $value) { foreach ($value as $promotion_id) { if ($use_multiple_promotions == 'Y' && (!isset($_plan_data['promotion_ids'][$promotion_id]) || !isset($partner_data['promotion_ids'][$promotion_id])) ) { continue; } if (!empty($promotion_id) && sd_NTYwMmVkMWZhNWQ0ZjYxNTMwY2RmZmRm($partner_data['partner_id'], $coupon_code) ) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( 'use_coupon', !empty($partner_data['banner_id']) ? $partner_data['banner_id'] : 0, $partner_data['partner_id'], !empty($auth['user_id']) ? $auth['user_id'] : 0, [ AFFILIATE_DATA_TYPE_ORDER => $order_id, AFFILIATE_DATA_TYPE_DISCOUNT => $promotion_id, AFFILIATE_DATA_TYPE_REFERER => !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '' ], $order['subtotal'] ); unset($partner_data['promotion_ids'][$promotion_id]); } } } } else { if (!empty($order['products'])) { fn_set_hook('affiliate_commission_calculate_pre', $_plan_data, $order, $partner_type); foreach ($order['products'] as $product) { if ($partner_type == AffiliateUserTypes::CUSTOMER) { $subtotal = 0; if (!empty($product['extra']['points_info']['price'])) { $subtotal = $product['extra']['points_info']['price']; } else { sd_Y2UyYzIwNmY0YWUzNjJiNjIyYmU4ZTIx($product, $auth); $subtotal = $product['points_info']['price']; } } else { $subtotal = empty($product['subtotal']) ? 0 : $product['subtotal']; if ($subtotal) { $subtotal = $subtotal - $product['tax_value']; } } if (!empty($subtotal) && !empty($product['product_id'])) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( 'sale', !empty($partner_data['banner_id']) ? $partner_data['banner_id'] : 0, $partner_data['partner_id'], !empty($auth['user_id']) ? $auth['user_id'] : 0, [ AFFILIATE_DATA_TYPE_ORDER => $order_id, AFFILIATE_DATA_TYPE_PRODUCT => $product['product_id'], AFFILIATE_DATA_TYPE_REFERER => !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '' ], $subtotal ); } } } if (!empty($order['coupons']) && !empty($order['subtotal'])) { foreach ($order['coupons'] as $coupon_code => $value) { foreach ($value as $promotion_id) { if ($use_multiple_promotions == 'Y' && (!isset($_plan_data['promotion_ids'][$promotion_id]) || !isset($partner_data['promotion_ids'][$promotion_id])) ) { continue; } if ($use_multiple_promotions == 'Y') { $coupon_data = $_plan_data['promotion_ids'][$promotion_id]; $coupon_subtotal = ($coupon_data['value_type'] == AFFILIATE_DATA_TYPE_AFFILIATE) ? $coupon_data['value'] : $order['subtotal']; } else { $coupon_subtotal = ($_plan_data['payout_types']['use_coupon']['value_type'] == AFFILIATE_DATA_TYPE_AFFILIATE) ? $_plan_data['payout_types']['use_coupon']['value_type'] : $order['subtotal']; } if (!empty($coupon_subtotal) && sd_NTYwMmVkMWZhNWQ0ZjYxNTMwY2RmZmRm($partner_data['partner_id'], $coupon_code) ) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( 'use_coupon', empty($partner_data['banner_id']) ? 0 : $partner_data['banner_id'], $partner_data['partner_id'], empty($auth['user_id']) ? 0 : $auth['user_id'], [ AFFILIATE_DATA_TYPE_ORDER => $order_id, AFFILIATE_DATA_TYPE_DISCOUNT => $promotion_id, AFFILIATE_DATA_TYPE_REFERER => !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '' ], $coupon_subtotal ); } unset($partner_data['promotion_ids'][$promotion_id]); } } } } } } } function sd_MmMxMDg1NjBmYjhlY2NhZjA0M2ZmY2Q4($params, $items_per_page = 0, $lang_code = CART_LANGUAGE) { $actions = []; $payout_types = Registry::get('payout_types'); $addon_settings = Registry::get('addons.sd_affiliate'); $default_params = [ 'page' => 1, 'items_per_page' => $items_per_page, ]; $params = array_merge($default_params, $params); $sortings = [ 'action' => 'actions.action', 'date' => 'actions.date', 'cost' => 'actions.amount', 'customer' => ['customers.lastname', 'customers.firstname'], 'partner' => 'partners.firstname', 'banner' => '?:aff_banner_descriptions.title', 'status' => 'actions.payout_id, actions.approved', ]; $sorting = db_sort($params, $sortings, 'date', 'desc'); $condition = '1'; if (!empty($params['action_id'])) { $condition .= db_quote(' AND actions.action_id = ?i', $params['action_id']); } if (!empty($params['object_type'])) { $condition .= db_quote(' AND alinks.object_type = ?s', $params['object_type']); } if (!empty($params['object_data'])) { $condition .= db_quote(' AND alinks.object_data = ?s', $params['object_data']); } if (!empty($params['payout_id'])) { $condition .= db_quote(' AND payout_id = ?i', $params['payout_id']); } if (!empty($params['user_type'])) { $condition .= db_quote(' AND partners.user_type = ?s', $params['user_type']); } if (fn_allowed_for('ULTIMATE')) { $condition .= fn_get_company_condition('actions.company_id'); } if (!empty($params['condition'])) { if (!preg_match('/^\s*(AND|OR|XOR)/', $params['condition'])) { $condition .= ' AND '; } $condition .= $params['condition']; } if ($addon_settings['show_only_non_zero_cost_actions'] == 'Y') { $condition .= db_quote(' AND actions.amount != ?d', 0.00); } $limit = ''; if (!empty($params['items_per_page'])) { if (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::CUSTOMER) { $params['total_items'] = db_get_field( 'SELECT COUNT(*), partners.user_type' . ' FROM ?:aff_customer_actions as actions' . ' LEFT JOIN ?:users as partners ON partners.user_id = actions.partner_id' . ' WHERE ?p', $condition ); } elseif (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::PARTNER) { $params['total_items'] = db_get_field( 'SELECT COUNT(*), partners.user_type' . ' FROM ?:aff_partner_actions as actions' . ' LEFT JOIN ?:users as partners ON partners.user_id = actions.partner_id' . ' WHERE ?p', $condition ); } $limit = db_paginate($params['page'], $params['items_per_page']); } if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $condition .= db_quote( ' AND (?:aff_banners.company_id = ?i' . ' OR actions.banner_id = 0)', Registry::get('runtime.company_id') ); } } $fields = [ 'actions.*', 'alinks.object_data as parent_action_id', 'customers.firstname as customer_firstname', 'customers.lastname as customer_lastname', 'customers.user_type as type_of_customer', 'partners.firstname as partner_firstname', 'partners.lastname as partner_lastname', 'partners.user_type', '?:common_descriptions.object as plan', '?:common_descriptions.description as plan_description', '?:aff_banners.type as banner_type', '?:aff_banner_descriptions.title as banner', ]; if (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::CUSTOMER) { $actions = db_get_hash_array( 'SELECT ?p' . ' FROM ?:aff_customer_actions as actions' . ' LEFT JOIN ?:users as customers ON customers.user_id = actions.customer_id' . ' LEFT JOIN ?:users as partners ON partners.user_id = actions.partner_id' . ' LEFT JOIN ?:common_descriptions ON ?:common_descriptions.object_holder = ?s' . ' AND ?:common_descriptions.object_id = actions.plan_id AND ?:common_descriptions.lang_code = ?s' . ' LEFT JOIN ?:aff_banners ON ?:aff_banners.banner_id = actions.banner_id' . ' LEFT JOIN ?:aff_banner_descriptions ON ?:aff_banner_descriptions.banner_id = actions.banner_id' . ' AND ?:aff_banner_descriptions.lang_code = ?s' . ' LEFT JOIN ?:aff_customer_action_links as alinks ON alinks.action_id = actions.action_id' . ' AND alinks.object_type = ?s' . ' WHERE ?p ?p ?p', 'action_id', implode(', ', $fields), 'affiliate_plans', $lang_code, $lang_code, AFFILIATE_DATA_TYPE_AFFILIATE, $condition, $sorting, $limit ); } elseif (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::PARTNER) { $actions = db_get_hash_array( 'SELECT ?p' . ' FROM ?:aff_partner_actions as actions' . ' LEFT JOIN ?:users as customers ON customers.user_id = actions.customer_id' . ' LEFT JOIN ?:users as partners ON partners.user_id = actions.partner_id' . ' LEFT JOIN ?:common_descriptions ON ?:common_descriptions.object_holder = ?s' . ' AND ?:common_descriptions.object_id = actions.plan_id AND ?:common_descriptions.lang_code = ?s' . ' LEFT JOIN ?:aff_banners ON ?:aff_banners.banner_id = actions.banner_id' . ' LEFT JOIN ?:aff_banner_descriptions ON ?:aff_banner_descriptions.banner_id = actions.banner_id' . ' AND ?:aff_banner_descriptions.lang_code = ?s' . ' LEFT JOIN ?:aff_action_links as alinks ON alinks.action_id = actions.action_id' . ' AND alinks.object_type = ?s' . ' WHERE ?p ?p ?p', 'action_id', implode(', ', $fields), 'affiliate_plans', $lang_code, $lang_code, AFFILIATE_DATA_TYPE_AFFILIATE, $condition, $sorting, $limit ); } if (!empty($actions)) { $extra_data = []; $order_paid_statuses = !empty($addon_settings['successful_order_statuses']) ? array_keys($addon_settings['successful_order_statuses']) : []; $aff_prefix = !empty($addon_settings['coupon_prefix_delim']) ? $addon_settings['coupon_prefix_delim'] : ''; $use_aff_id = !empty($addon_settings['use_affiliate_id']) ? $addon_settings['use_affiliate_id'] : ''; foreach ($actions as $action_id => $action_data) { $actions[$action_id]['allow_approve'] = 'Y'; $actions[$action_id]['customer_exists'] = sd_ZTA2MDljZTM0NjkzMzU4NWIzNmQ2ZjRm($action_data['customer_id']); $actions[$action_id]['partner_exists'] = sd_ZTA2MDljZTM0NjkzMzU4NWIzNmQ2ZjRm($action_data['partner_id']); if (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::CUSTOMER) { $action_data['data'] = db_get_hash_single_array( 'SELECT object_data, object_type' . ' FROM ?:aff_customer_action_links' . ' WHERE action_id = ?i', ['object_type', 'object_data'], $action_id ); } elseif (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::PARTNER) { $action_data['data'] = db_get_hash_single_array( 'SELECT object_data, object_type' . ' FROM ?:aff_action_links' . ' WHERE action_id = ?i', ['object_type', 'object_data'], $action_id ); } $actions[$action_id]['data'] = $action_data['data']; if (!empty($action_data['data'])) { if (!empty($actions[$action_id]['data'][AFFILIATE_DATA_TYPE_PRODUCT])) { $actions[$action_id]['data']['product_name'] = fn_get_product_name( $actions[$action_id]['data'][AFFILIATE_DATA_TYPE_PRODUCT], $lang_code ); } if (!empty($actions[$action_id]['data'][AFFILIATE_DATA_TYPE_ORDER])) { $tmp_order = fn_get_order_info($actions[$action_id]['data'][AFFILIATE_DATA_TYPE_ORDER]); if (!empty($tmp_order['status']) && !in_array($tmp_order['status'], $order_paid_statuses) && $action_data['approved'] != 'Y' ) { $actions[$action_id]['allow_approve'] = 'N'; } if (!empty($tmp_order['status'])) { $actions[$action_id]['data']['order_status'] = $tmp_order['status']; } if (fn_allowed_for('MULTIVENDOR') && !empty($addon_settings['show_vendor_to_affiliate']) && $addon_settings['show_vendor_to_affiliate'] == 'Y' ) { $actions[$action_id]['vendor_data'] = db_get_row( 'SELECT ?:companies.company_id, ?:companies.company FROM ?:companies' . ' LEFT JOIN ?:orders ON ?:orders.company_id = ?:companies.company_id' . ' WHERE ?:orders.order_id = ?i', $actions[$action_id]['data'][AFFILIATE_DATA_TYPE_ORDER] ); } } if (!empty($actions[$action_id]['data'][AFFILIATE_DATA_TYPE_DISCOUNT])) { $actions[$action_id]['data']['coupon'] = fn_get_promotion_data( $actions[$action_id]['data'][AFFILIATE_DATA_TYPE_DISCOUNT] ); if (!empty($tmp_order['coupons'])) { $coupon_codes = array_keys($tmp_order['coupons']); if (!empty($coupon_codes)) { foreach ($coupon_codes as $coupon_key => $coupon_value) { if (Registry::get('addons.sd_affiliate.use_multiple_promotions') == 'Y') { if ($use_aff_id == 'Y' && $aff_prefix) { $coupon_codes[$coupon_key] = Tygh::$app['session']['auth']['user_id'] . $aff_prefix . $coupon_value; } else { $coupon_codes[$coupon_key] = sd_NmExYjJjOGQyNDI4MzJkNTE5OTFjMGJk(Tygh::$app['session']['auth']['user_id']) . $aff_prefix . $coupon_value; } } } $actions[$action_id]['data']['coupon_code'] = implode(',', $coupon_codes); } } } } else { $actions[$action_id]['data'] = []; } if (!empty($action_data['parent_action_id']) && empty($extra_data[$action_data['parent_action_id']])) { if (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::CUSTOMER) { $extra_data[$action_data['parent_action_id']] = db_get_hash_array( 'SELECT actions.action_id, actions.action, actions.amount, actions.partner_id, alinks.object_data as tier,' . ' partners.firstname, partners.lastname, partners.email, partners.user_type' . ' FROM ?:aff_customer_actions as actions' . ' LEFT JOIN ?:aff_customer_action_links as alinks ON alinks.action_id = actions.action_id' . ' AND alinks.object_type = ?s' . ' LEFT JOIN ?:users as partners ON partners.user_id = actions.partner_id' . ' WHERE actions.action_id = ?i OR actions.action_id' . ' IN (SELECT links.action_id' . ' FROM ?:aff_action_links as links' . ' WHERE links.object_type = ?s AND links.object_data = ?i)' . ' ORDER BY actions.action_id ASC', 'action_id', AFFILIATE_DATA_TYPE_LEVEL, $action_data['parent_action_id'], AFFILIATE_DATA_TYPE_AFFILIATE, $action_data['parent_action_id'] ); } elseif (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::PARTNER) { $extra_data[$action_data['parent_action_id']] = db_get_hash_array( 'SELECT actions.action_id, actions.action, actions.amount, actions.partner_id, alinks.object_data as tier,' . ' partners.firstname, partners.lastname, partners.email, partners.user_type' . ' FROM ?:aff_partner_actions as actions' . ' LEFT JOIN ?:aff_action_links as alinks ON alinks.action_id = actions.action_id' . ' AND alinks.object_type = ?s' . ' LEFT JOIN ?:users as partners ON partners.user_id = actions.partner_id' . ' WHERE actions.action_id = ?i OR actions.action_id' . ' IN (SELECT links.action_id' . ' FROM ?:aff_action_links as links' . ' WHERE links.object_type = ?s AND links.object_data = ?i)' . ' ORDER BY actions.action_id ASC', 'action_id', AFFILIATE_DATA_TYPE_LEVEL, $action_data['parent_action_id'], AFFILIATE_DATA_TYPE_AFFILIATE, $action_data['parent_action_id'] ); } if (!empty($extra_data[$action_data['parent_action_id']])) { foreach ($extra_data[$action_data['parent_action_id']] as $related_id => $related_data) { $extra_data[$action_data['parent_action_id']][$related_id]['title'] = empty($payout_types[$related_data['action']]['title']) ? '' : __($payout_types[$related_data['action']]['title'], '', $lang_code); if (!empty($related_data['firstname']) || !empty($related_data['lastname'])) { $extra_data[$action_data['parent_action_id']][$related_id]['affiliate'] = $related_data['firstname'] . ' ' . $related_data['lastname']; } else { $extra_data[$action_data['parent_action_id']][$related_id]['affiliate'] = $related_data['email']; } } } } if (!empty($extra_data[$action_data['parent_action_id']])) { $actions[$action_id]['extra_data'] = $extra_data[$action_data['parent_action_id']]; } $actions[$action_id]['title'] = empty($payout_types[$action_data['action']]['title']) ? '' : __($payout_types[$action_data['action']]['title'], '', $lang_code); if (!empty($actions[$action_id]['data'][AFFILIATE_DATA_TYPE_LEVEL]) && !empty($actions[$action_id]['title'])) { $_level = strval($actions[$action_id]['data'][AFFILIATE_DATA_TYPE_LEVEL]); $actions[$action_id]['title'] .= ' (' . $_level . ' ' . __('tier_account', '', $lang_code) . ')'; } } } return [$actions, $params]; } function sd_Y2ZhMDkyNjJhMzIxNWVjNDk0MzM1ZWNj($order_id, $paid = false, $lang_code = CART_LANGUAGE) { $payout_types = Registry::get('payout_types'); if (empty($order_id)) { return false; } $where = ($paid == true) ? ' AND ?:aff_partner_actions.payout_id != 0' : ''; $_aff_actions = db_get_array( 'SELECT ?:aff_partner_actions.*, ?:users.firstname, ?:users.lastname' . ' FROM ?:aff_action_links' . ' LEFT JOIN ?:aff_partner_actions ON ?:aff_partner_actions.action_id = ?:aff_action_links.action_id' . ' LEFT JOIN ?:users ON ?:users.user_id = ?:aff_partner_actions.partner_id' . ' WHERE object_data = ?i AND object_type = ?s ?p', $order_id, AFFILIATE_DATA_TYPE_ORDER, $where ); if (empty($_aff_actions)) { $where = ($paid == true) ? ' AND ?:aff_customer_actions.payout_id != 0' : ''; $_aff_actions = db_get_array( 'SELECT ?:aff_customer_actions.*, ?:users.firstname, ?:users.lastname' . ' FROM ?:aff_customer_action_links' . ' LEFT JOIN ?:aff_customer_actions ON ?:aff_customer_actions.action_id = ?:aff_customer_action_links.action_id' . ' LEFT JOIN ?:users ON ?:users.user_id = ?:aff_customer_actions.partner_id' . ' WHERE object_data = ?i AND object_type = ?s ?p', $order_id, AFFILIATE_DATA_TYPE_ORDER, $where ); } if (!empty($_aff_actions)) { foreach ($_aff_actions as $key => $act) { $_aff_actions[$key]['title'] = __($payout_types[$act['action']]['title'], '', $lang_code); } } Registry::set('payout_types', $payout_types); return $_aff_actions; } function sd_NDRiZTU3NTM1NGViY2M0ZDljN2Y3MzA5($cnt_last_periods = 1) { if ($cnt_last_periods < 1) { return false; } $_cur_time = TIME; $cur_date = getdate($_cur_time); if (Registry::get('addons.sd_affiliate.payment_period') === false) { return false; } switch (Registry::get('addons.sd_affiliate.payment_period')) { case '1w': $start_date = mktime(0, 0, 0, $cur_date['mon'], $cur_date['mday'], $cur_date['year']); $start_date = strtotime("-$cnt_last_periods week", $start_date); break; case '2w': $start_date = mktime(0, 0, 0, $cur_date['mon'], $cur_date['mday'], $cur_date['year']); $weeks = $cnt_last_periods * 2; $start_date = strtotime("-$weeks week", $start_date); break; case '1m': $start_date = mktime(0, 0, 0, $cur_date['mon'], $cur_date['mday'], $cur_date['year']); $start_date = strtotime("-$cnt_last_periods month", $start_date); break; } return $start_date; } function sd_NmExYjJjOGQyNDI4MzJkNTE5OTFjMGJk($num, $base = BASE_D, $index = false) { if (!$base) { $base = strlen($index); } elseif (!$index) { $index = substr(INDEX_D, 0, $base); } $_num = intval($num); if (empty($_num)) { $out = substr($index, 0, 1); } else { $out = ''; for ($t = floor(log10($num) / log10($base)); $t >= 0; --$t) { $a = floor($num / pow($base, $t)); $out = $out . substr($index, $a, 1); $num = $num - ($a * pow($base, $t)); } } $max_len = 10; $len = $max_len - 1 - strlen($out); $_pref = substr(INDEX_D, $len, $len); $out = $_pref . 'A' . $out; return $out; } function sd_YTEzMWFmMmVmNjY0ODMxOTU4YjczMDc4($num, $base = BASE_D, $index = false) { if (!$base) { $base = strlen($index); } elseif (!$index) { $index = substr(INDEX_D, 0, $base); } $out = 0; $_pos = stripos($num, 'A'); $num = substr($num, $_pos + 1); $len = strlen($num) - 1; for ($t = 0; $t <= $len; ++$t) { $out = $out + stripos($index, substr($num, $t, 1)) * pow($base, $len - $t); } return $out; } function sd_YmVkYThjZTg0NTkxMjExYjBmYmFlNWRj($partner_id) { if (headers_sent()) { return false; } if (!empty($partner_id) && fn_get_cookie(AFFILIATE_COOKIE_NAME) != $partner_id) { $plan_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($partner_id, true); if (!empty($plan_data['cookie_expiration'])) { $partner_id_alive_time = $plan_data['cookie_expiration'] * SECONDS_IN_DAY; fn_set_cookie(AFFILIATE_COOKIE_NAME, $partner_id, $partner_id_alive_time); return true; } } return false; } function sd_YmM4OGU2Mjg3OWRlNWZkM2NkOTE2ZmQx($active = true, $lang_code = CART_LANGUAGE) { if (empty($active)) { $condition = ''; } else { $condition = db_quote(' AND ?:aff_groups.status = ?s', AffiliateStatuses::ACTIVE); } if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $condition .= db_quote(' AND ?:aff_groups.company_id = ?i', Registry::get('runtime.company_id')); } } $groups_list = db_get_hash_array( 'SELECT ?:aff_groups.group_id, ?:aff_group_descriptions.name' . ' FROM ?:aff_groups' . ' LEFT JOIN ?:aff_group_descriptions ON ?:aff_groups.group_id = ?:aff_group_descriptions.group_id' . ' AND ?:aff_group_descriptions.lang_code = ?s ' . ' WHERE 1 ?p ORDER BY name', 'group_id', $lang_code, $condition ); return $groups_list; } function sd_ZTY3YTVhYWVhYzc0ZjRkMDA4OWU1MTI5($banner_type = '') { if ($banner_type != BannerTypes::PRODUCTS) { $link_types = [ BannerLinkTypes::PRODUCT_GROUPS => __('product_groups'), BannerLinkTypes::CATEGORIES => __('categories'), BannerLinkTypes::PRODUCTS => __('products'), ]; } $link_types[BannerLinkTypes::URL] = __('url'); return $link_types; } function fn_sd_affiliate_get_predefined_statuses(&$type, &$statuses) { if ($type == 'affiliate') { $statuses['affiliate'] = [ AffiliateStatuses::OPEN => __('open'), AffiliateStatuses::SUCCESSFUL => __('successful'), ]; } } function sd_MmZhMjRhMjhlMjYyMGJkYWY1OWZhNjM0($id) { $approved_affiliate = db_get_field('SELECT approved FROM ?:aff_partner_profiles WHERE user_id = ?i', $id); return $approved_affiliate == UserStatuses::APPROVED; } function fn_sd_affiliate_update_profile(&$action, &$user_data, $current_user_data) { if ($action == 'update' && $user_data['user_type'] == AffiliateUserTypes::PARTNER && !empty($user_data['partner_id'] && $current_user_data['user_type'] == 'C') ) { $partner_action = ($user_data['user_type'] == AffiliateUserTypes::PARTNER) ? 'new_partner' : 'new_customer'; if (!empty($user_data['partner_id'])) { $affiliate_referer = !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''; sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( $partner_action, !empty($user_data['banner_id']) ? $user_data['banner_id'] : 0, $user_data['partner_id'], $user_data['user_id'], [AFFILIATE_DATA_TYPE_REFERER => $affiliate_referer] ); } sd_MDNmNjdmNDVmZjQxMzlmMDUzNDJjZDc4($user_data['user_id'], $user_data['partner_id']); } $is_affiliate_user_type = in_array( $user_data['user_type'], [AffiliateUserTypes::PARTNER, AffiliateUserTypes::CUSTOMER] ); if ($action == 'add' && $is_affiliate_user_type) { $partner_action = ($user_data['user_type'] == AffiliateUserTypes::PARTNER) ? 'new_partner' : 'new_customer'; if (!empty(Tygh::$app['session']['partner_data']['partner_id'])) { $affiliate_referer = !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''; sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( $partner_action, !empty(Tygh::$app['session']['partner_data']['banner_id']) ? Tygh::$app['session']['partner_data']['banner_id'] : 0, Tygh::$app['session']['partner_data']['partner_id'], $user_data['user_id'], [AFFILIATE_DATA_TYPE_REFERER => $affiliate_referer] ); if ($user_data['user_type'] == AffiliateUserTypes::PARTNER) { $referrer_exists = db_get_field( 'SELECT COUNT(*) FROM ?:aff_partner_profiles WHERE user_id = ?i', Tygh::$app['session']['partner_data']['partner_id'] ); if ((bool) $referrer_exists) { $partner_data = ['referrer_partner_id' => Tygh::$app['session']['partner_data']['partner_id']]; if (Registry::get('addons.sd_affiliate.automatic_approval_affiliates') == 'Y') { $partner_data['approved'] = UserStatuses::APPROVED; } sd_MmM0NzU0Njk1OWUwZGYyMDY3MDcyOTBh($user_data['user_id'], $partner_data); } } } } if ($action == 'update' && $user_data['user_type'] != AffiliateUserTypes::PARTNER) { sd_NTgwMGRlMGJiNGM4ZTc5YzNhZmYyNWIz($user_data['user_id']); $usergroup_for_affiliate_id = Settings::instance()->getValue('affiliates_usergroup', 'sd_affiliate', 0); fn_change_usergroup_status('F', $user_data['user_id'], $usergroup_for_affiliate_id); } if (AREA == 'C' && !empty($user_data['user_type']) && $user_data['user_type'] == AffiliateUserTypes::PARTNER && Registry::get('addons.sd_affiliate.notify_admin_about_new_affiliate') == 'Y' && ($action == 'add' || $action == 'update' && $current_user_data['user_type'] == AffiliateUserTypes::CUSTOMER) ) { sd_NGFiNWNjNDk5NDUyZDY2MmVkMTA4ZjBm($user_data); } if (!empty($user_data['user_type']) && $user_data['user_type'] == AffiliateUserTypes::PARTNER) { $profile_exists = db_get_field( 'SELECT COUNT(*) FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_data['user_id'] ); if (empty($profile_exists)) { if (Registry::get('addons.sd_affiliate.automatic_approval_affiliates') == 'Y') { $update_data = ['approved' => UserStatuses::APPROVED]; } else { $update_data = ['approved' => UserStatuses::NOAPPROVED]; } sd_MmM0NzU0Njk1OWUwZGYyMDY3MDcyOTBh($user_data['user_id'], $update_data); if (Registry::get('addons.sd_affiliate.auto_assign_affiliates_usergroup') === 'Y') { sd_YTdmYjA2MWZmZDIzMjUyMDIwZWExY2Ji($action, $user_data); } } } return true; } function sd_NGFiNWNjNDk5NDUyZDY2MmVkMTA4ZjBm($user_data) { if (!empty($user_data)) { $mailer = Tygh::$app['mailer']; $mailer->send([ 'to' => 'company_users_department', 'from' => 'default_company_users_department', 'data' => [ 'user_data' => $user_data, ], 'template_code' => 'new_affiliate_notification', 'tpl' => 'addons/sd_affiliate/new_affiliate.tpl', 'company_id' => $user_data['company_id'], ], 'A', Registry::get('settings.Appearance.backend_default_language')); } } function fn_sd_affiliate_place_order($order_id, $action) { if (fn_allowed_for('MULTIVENDOR')) { $order_info = fn_get_order_info($order_id); } if (!empty(Tygh::$app['session']['partner_data']) && !(fn_allowed_for('MULTIVENDOR') && $order_info['is_parent_order'] == 'Y') ) { sd_OTk2YTExNTNiMTEyZTkzYWZhNzg1YTg4( $order_id, (defined('ORDER_MANAGEMENT') ? Tygh::$app['session']['customer_auth'] : Tygh::$app['session']['auth']), $action, Tygh::$app['session']['partner_data'] ); } if (defined('ORDER_MANAGEMENT')) { unset(Tygh::$app['session']['partner_data']); } return true; } function fn_sd_affiliate_finish_payment($order_id, $pp_response, $force_notification) { if (isset($pp_response['order_status']) && ($pp_response['order_status'] == STATUS_INCOMPLETED_ORDER || $pp_response['order_status'] == STATUS_CANCELED_ORDER) ) { $action_id = db_get_field('SELECT action_id FROM ?:aff_action_links WHERE object_data = ?i', $order_id); db_query('DELETE FROM ?:aff_action_links WHERE action_id = ?i', $action_id); db_query('DELETE FROM ?:aff_partner_actions WHERE action_id = ?i', $action_id); } } function fn_sd_affiliate_edit_place_order(&$order_id) { if (!empty(Tygh::$app['session']['partner_data']) && Tygh::$app['session']['partner_data']['is_payouts'] != 'Y' ) { $_commissions = sd_Y2ZhMDkyNjJhMzIxNWVjNDk0MzM1ZWNj($order_id); if (!empty($_commissions)) { $_action_ids = []; foreach ($_commissions as $_action_data) { $_action_ids[] = $_action_data['action_id']; Tygh::$app['session']['partner_data']['banner_id'] = $_action_data['banner_id']; } db_query('DELETE FROM ?:aff_partner_actions WHERE action_id IN (?n)', $_action_ids); db_query('DELETE FROM ?:aff_action_links WHERE action_id IN (?n)', $_action_ids); } } return true; } function fn_sd_affiliate_get_users(&$params, &$fields, &$sortings, &$condition, &$join) { if (!empty($params['user_type']) && $params['user_type'] == AffiliateUserTypes::PARTNER) { $sortings['partner_status'] = '?:aff_partner_profiles.approved'; $sortings['plan'] = '?:common_descriptions.object'; $fields[] = '?:aff_partner_profiles.approved'; $fields[] = '?:aff_partner_profiles.plan_id'; $fields[] = '?:aff_partner_profiles.balance'; $fields[] = '?:aff_partner_profiles.referrer_partner_id'; $fields[] = '?:common_descriptions.object as plan'; if (!empty($params['approved'])) { $condition['aff_approved'] = db_quote(' AND ?:aff_partner_profiles.approved = ?s', $params['approved']); } if (!empty($params['plan_id'])) { if ($params['plan_id'] == -1) { $condition['aff_plan_id'] = db_quote( ' AND (?:aff_partner_profiles.plan_id = 0' . ' OR ISNULL(?:aff_partner_profiles.approved))' ); } else { $condition['aff_plan_id'] = db_quote(' AND ?:aff_partner_profiles.plan_id = ?i', $params['plan_id']); } } if (!empty($params['referrer_partner_id'])) { $condition['aff_referrer_partner_id'] = db_quote( ' AND ?:aff_partner_profiles.referrer_partner_id = ?i', $params['referrer_partner_id'] ); } $join .= db_quote( ' LEFT JOIN ?:aff_partner_profiles ON ?:aff_partner_profiles.user_id = ?:users.user_id' . ' LEFT JOIN ?:common_descriptions ON ?:aff_partner_profiles.plan_id = ?:common_descriptions.object_id' . ' AND ?:common_descriptions.object_holder = ?s AND ?:common_descriptions.lang_code = ?s', CART_LANGUAGE, 'affiliate_plans' ); } return true; } function fn_sd_affiliate_change_location(&$location, &$select, &$condition, &$params) { if ($location == 'P') { $select = ', ?:profile_fields.partner_required as required'; $condition .= db_quote(' AND ?:profile_fields.partner_show = ?s', 'Y'); return true; } } function fn_sd_affiliate_get_user_type_description(&$type_descr) { $type_descr['S'][AffiliateUserTypes::PARTNER] = 'affiliate'; $type_descr[AffiliateUserTypes::PARTNER][AffiliateUserTypes::PARTNER] = 'affiliates'; return true; } function fn_sd_affiliate_check_user_type_access_rules_pre(&$user_data, &$account_type, &$rules) { $rules[AffiliateUserTypes::PARTNER] = ['customer']; } function fn_sd_affiliate_promotion_check_coupon(&$coupon_code, &$cart) { if (Registry::get('runtime.checkout') && $partner_id = Registry::get('affiliate_partner_id')) { if (!empty($partner_id)) { if (empty(Tygh::$app['session']['partner_data'])) { Tygh::$app['session']['partner_data'] = []; } Tygh::$app['session']['partner_data']['partner_id'] = $partner_id; Tygh::$app['session']['partner_data']['is_payouts'] = 'N'; sd_YmVkYThjZTg0NTkxMjExYjBmYmFlNWRj($partner_id); foreach ($cart['coupons'][$coupon_code] as $promotion_id) { Tygh::$app['session']['partner_data']['promotion_ids'][$promotion_id] = $promotion_id; } } } return true; } function fn_sd_affiliate_pre_promotion_check_coupon(&$coupon_code) { if (empty($coupon_code) || !Registry::get('runtime.checkout')) { return false; } $use_multiple_promotions = Registry::get('addons.sd_affiliate.use_multiple_promotions'); if ($use_multiple_promotions == 'N') { $partner_id = db_get_field('SELECT user_id FROM ?:aff_partner_profiles WHERE coupon_code = ?s', $coupon_code); } else { $orig_coupon = $coupon_code; $prefix = Registry::get('addons.sd_affiliate.coupon_prefix_delim'); $delim_len = strlen($prefix); if (Registry::get('addons.sd_affiliate.use_affiliate_id') == 'Y' && !empty($delim_len)) { if (($delim_idx = strpos($coupon_code, $prefix)) != false) { $delim_chr = substr($coupon_code, $delim_idx, $delim_len); if ($delim_chr == $prefix) { $partner_id = intval(substr($coupon_code, 0, $delim_idx)); if (!empty($partner_id)) { $coupon_code = substr($coupon_code, $delim_idx + $delim_len); } } } } else { $prefix_length = 10; $delim_chr = substr($coupon_code, $prefix_length, $delim_len); if ($delim_chr == $prefix) { $partner_code = substr($coupon_code, 0, $prefix_length); $partner_id = sd_YTEzMWFmMmVmNjY0ODMxOTU4YjczMDc4($partner_code); if (!empty($partner_id)) { if ($partner_code == mb_strtolower(sd_NmExYjJjOGQyNDI4MzJkNTE5OTFjMGJk($partner_id))) { $coupon_code = substr($coupon_code, $prefix_length + $delim_len); } else { $partner_id = 0; } } } } if (!empty($partner_id)) { $plans_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($partner_id, true); $valid_coupon = false; if (!empty($plans_data['promotion_ids'])) { $params = [ 'promotion_id' => array_keys($plans_data['promotion_ids']), 'expand' => true, ]; list($coupons) = fn_get_promotions($params); foreach ($coupons as $coupon_data) { foreach ($coupon_data['conditions']['conditions'] as $cnd) { if ($cnd['operator'] == 'in') { $coupon_code_values = fn_explode(',', $cnd['value']); $coupon_code_values = array_map('mb_strtolower', $coupon_code_values); if ($cnd['condition'] == 'coupon_code' && in_array(mb_strtolower($coupon_code), $coupon_code_values) ) { $valid_coupon = true; break; } } elseif ($cnd['condition'] == 'coupon_code' && $coupon_code == mb_strtolower($cnd['value']) ) { $valid_coupon = true; break; } } if ($valid_coupon) { break; } } } if (!$valid_coupon) { $partner_id = 0; $coupon_code = $orig_coupon; } } } if (!empty($partner_id)) { Registry::set('affiliate_partner_id', $partner_id); return true; } else { return false; } } function fn_sd_affiliate_auth_routines(&$status, &$user_data) { if (!empty($user_data['user_id']) && $user_data['user_type'] == AffiliateUserTypes::PARTNER) { $partner_profile = db_get_row( 'SELECT *' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $user_data['user_id'] ); $user_data = fn_array_merge($user_data, $partner_profile); if ((empty($user_data['approved']) || $user_data['approved'] == UserStatuses::NOAPPROVED)) { fn_set_notification('W', __('warning'), __('error_account_not_approved')); } if (!empty($user_data['approved']) && $user_data['approved'] == AFFILIATE_DATA_TYPE_DISCOUNT) { fn_set_notification('W', __('warning'), __('error_account_declined')); } } return true; } function fn_sd_affiliate_fill_auth(&$auth, &$user_data) { if (!empty($user_data['user_type']) && $user_data['user_type'] == AffiliateUserTypes::PARTNER) { $is_approved = db_get_field( 'SELECT approved' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $user_data['user_id'] ); if ($is_approved == UserStatuses::APPROVED) { $auth['is_affiliate'] = true; } } return true; } function fn_sd_affiliate_profile_fields_areas(&$areas) { $areas['partner'] = 'affiliate'; } function fn_sd_affiliate_get_order_info(&$order, &$additional_data) { if (!empty($order['order_id'])) { $_aff_actions = sd_Y2ZhMDkyNjJhMzIxNWVjNDk0MzM1ZWNj($order['order_id']); if (!empty($_aff_actions)) { $order_info['affiliate']['commissions'] = $_aff_actions; } unset($_aff_actions); } } function fn_sd_affiliate_delete_user(&$user_id) { $referrer_partner_id = db_get_field( 'SELECT referrer_partner_id' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $user_id ); if ($referrer_partner_id !== false) { db_query( 'UPDATE ?:aff_partner_profiles' . ' SET ?u' . ' WHERE referrer_partner_id = ?i', ['referrer_partner_id' => $referrer_partner_id], $user_id ); } db_query('DELETE FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_id); } function fn_sd_affiliate_form_cart(&$order_info, &$cart) { $_partner_data = db_get_field( 'SELECT data' . ' FROM ?:order_data' . ' WHERE order_id = ?i AND type = ?s', $order_info['order_id'], ORDER_DATA_AFFILIATE_INFO ); if (!empty($_partner_data)) { $_partner_data = unserialize($_partner_data); if (!empty($_partner_data['partner_id'])) { $cart['affiliate']['partner_id'] = $_partner_data['partner_id']; $cart['affiliate']['code'] = sd_NmExYjJjOGQyNDI4MzJkNTE5OTFjMGJk($cart['affiliate']['partner_id']); if ($partner_data = sd_YzMyYjYwOWYwODE2NWUyZGM5NjE2Zjk5($_partner_data['partner_id'])) { $cart['affiliate']['firstname'] = $partner_data['firstname']; $cart['affiliate']['lastname'] = $partner_data['lastname']; } } } $_paid_commissions = sd_Y2ZhMDkyNjJhMzIxNWVjNDk0MzM1ZWNj($order_info['order_id'], true); $cart['affiliate']['is_payouts'] = empty($_paid_commissions) ? 'N' : 'Y'; } function fn_sd_affiliate_get_products_pre(&$params, &$items_per_page, &$lang_code) { if (!empty($params['display']) && $params['display'] == 'affiliate') { $params['extend'][] = 'categories'; } } function fn_sd_affiliate_get_products(&$params, &$fields, &$sortings, &$condition, &$join) { if (!empty($params['display']) && $params['display'] == 'affiliate') { $plan_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw(Tygh::$app['session']['auth']['user_id']); if ($plan_data) { $condition .= db_quote( ' AND (products.product_id IN (?n)' . ' OR ?:categories.category_id IN (?n))', array_keys($plan_data['product_ids']), array_keys($plan_data['category_ids']) ); } } } function fn_sd_affiliate_check_user_type(&$compatible_types) { $compatible_types[AffiliateUserTypes::CUSTOMER][] = AffiliateUserTypes::PARTNER; $compatible_types[AffiliateUserTypes::PARTNER][] = AffiliateUserTypes::CUSTOMER; } function fn_sd_affiliate_user_need_login(&$types) { $types[] = AffiliateUserTypes::PARTNER; } function fn_sd_affiliate_change_order_status($status_to, $status_from, $order_info, $force_notification, $order_statuses) { $addon_settings = Registry::get('addons.sd_affiliate'); $_commissions = sd_Y2ZhMDkyNjJhMzIxNWVjNDk0MzM1ZWNj($order_info['order_id']); $first_commission = reset($_commissions); if (!empty($_commissions)) { $partner_type = db_get_field('SELECT user_type FROM ?:users WHERE user_id = ?i', $first_commission['partner_id']); } if (!empty($_commissions)) { if ((($partner_type == AffiliateUserTypes::PARTNER && $addon_settings['automatic_approval_commissions'] == 'Y') || ($partner_type == AffiliateUserTypes::CUSTOMER && $addon_settings['allow_all_customers_be_affiliates'] == 'Y')) && in_array($status_to, array_keys($addon_settings['successful_order_statuses'])) ) { $approve = 'Y'; } elseif (!in_array($status_to, array_keys($addon_settings['successful_order_statuses']))) { $approve = 'N'; } if (!empty($approve)) { $amount = []; $_ids = []; foreach ($_commissions as $val) { if ($partner_type == AffiliateUserTypes::CUSTOMER && Registry::get('addons.sd_affiliate.allow_all_customers_be_affiliates') == 'Y' && Registry::get('addons.reward_points.status') == 'A' ) { $user_points = fn_get_user_additional_data(POINTS, $val['partner_id']); if ($approve == 'N' && $val['approved'] == 'Y') { $points = $val['amount'] > $user_points ? $user_points : $val['amount']; fn_change_user_points(-$points, $val['partner_id'], __('addons.sd_affiliate.order_failed')); } elseif ($approve == 'Y' && $val['approved'] == 'N') { fn_change_user_points($val['amount'], $val['partner_id'], __('addons.sd_affiliate.sale')); } db_query( 'UPDATE ?:aff_customer_actions' . ' SET ?u' . ' WHERE action_id = ?i', ['approved' => $approve], $val['action_id'] ); sd_OTEwYjdkYmExMmVlODg2OTc5MDdhYzlk($val['partner_id'], $order_info['company_id']); } elseif ($val['payout_id'] == 0 && $val['approved'] != $approve) { if (empty($amount[$val['partner_id']])) { $amount[$val['partner_id']] = floatval($val['amount']); } else { $amount[$val['partner_id']] += floatval($val['amount']); } $_ids[] = $val['action_id']; } } if ($partner_type == AffiliateUserTypes::PARTNER) { foreach ($amount as $partner_id => $_amount) { sd_YTNhYmE0MTM3MjU4ODc1MWFlZTIzNjE1($partner_id, $_amount, $approve == 'Y' ? '+' : '-'); } db_query( 'UPDATE ?:aff_partner_actions' . ' SET ?u' . ' WHERE action_id IN (?n)', ['approved' => $approve], $_ids ); } } } } function fn_sd_affiliate_delete_order(&$order_id) { $_commissions = sd_Y2ZhMDkyNjJhMzIxNWVjNDk0MzM1ZWNj($order_id); if (!empty($_commissions)) { foreach ($_commissions as $val) { if ($val['payout_id'] == 0) { if (Registry::get('addons.sd_affiliate.automatic_approval_commissions') != 'Y') { sd_YTNhYmE0MTM3MjU4ODc1MWFlZTIzNjE1($val['partner_id'], $val['amount'], '-'); } } else { db_query('DELETE FROM ?:affiliate_payouts WHERE payout_id = ?i', $val['payout_id']); } db_query('DELETE FROM ?:aff_action_links WHERE action_id = ?i', $val['action_id']); db_query('DELETE FROM ?:aff_partner_actions WHERE action_id = ?i', $val['action_id']); } } } function fn_sd_affiliate_get_user_types(&$types) { if (!fn_allowed_for('ULTIMATE')) { if (!Registry::get('runtime.company_id')) { $types[AffiliateUserTypes::PARTNER] = 'add_affiliate'; } } if (fn_allowed_for('ULTIMATE')) { $types[AffiliateUserTypes::PARTNER] = 'add_affiliate'; } } function fn_sd_affiliate_get_feedback_data(&$fdata) { $fdata['general']['affiliate_plans'] = db_get_field('SELECT COUNT(*) FROM ?:affiliate_plans'); } function fn_sd_affiliate_update_cart_by_data_post(&$cart, &$new_cart_data, &$auth) { if (!empty($cart['order_id']) && $cart['affiliate']['is_payouts'] != 'Y') { $cart['affiliate']['code'] = empty($new_cart_data['affiliate_code']) ? '' : $new_cart_data['affiliate_code']; $_partner_id = sd_YTEzMWFmMmVmNjY0ODMxOTU4YjczMDc4($cart['affiliate']['code']); $_partner_data = db_get_row( 'SELECT firstname, lastname, user_id as partner_id FROM ?:users WHERE user_id = ?i AND user_type = ?s', $_partner_id, AffiliateUserTypes::PARTNER ); if (!empty($_partner_data)) { $cart['affiliate'] = $_partner_data + $cart['affiliate']; Tygh::$app['session']['partner_data'] = [ 'partner_id' => $cart['affiliate']['partner_id'], 'is_payouts' => 'N', ]; } else { unset( $cart['affiliate']['partner_id'], $cart['affiliate']['firstname'], $cart['affiliate']['lastname'], Tygh::$app['session']['partner_data'] ); } } return true; } function fn_sd_affiliate_init_company_data($params, $company_id, $company_data) { if (!empty(Tygh::$app['session']['partner_data']['partner_id'])) { sd_YmVkYThjZTg0NTkxMjExYjBmYmFlNWRj(Tygh::$app['session']['partner_data']['partner_id']); } } function fn_sd_affiliate_ult_check_store_permission($params, &$object_type, &$object_name, &$table, &$key, &$key_id) { if (Registry::get('runtime.controller') == 'banners_manager' && !empty($params['banner_id'])) { $key = 'banner_id'; $key_id = $params[$key]; $table = 'aff_banners'; $object_name = sd_NzZiZjM1NmI2ODU2NzU5ODBlZTUwZjQ2($key_id, DESCR_SL); $object_type = __('banner'); } elseif (Registry::get('runtime.controller') == 'affiliate_plans' && !empty($params['plan_id'])) { $key = 'plan_id'; $key_id = $params[$key]; $table = 'affiliate_plans'; $object_name = sd_MDE5OTU2NmQ4ZmUyNTgyNmE2NDhjM2Zl($key_id, DESCR_SL); $object_type = __('plan'); } elseif (Registry::get('runtime.controller') == 'product_groups' && !empty($params['group_id'])) { $key = 'group_id'; $key_id = $params[$key]; $table = 'aff_groups'; $object_name = sd_YzZmZWU1MDViOGUzMDhjMDA2NjAyNjU2($key_id, DESCR_SL); $object_type = __('group'); } } function fn_sd_affiliate_update_user_pre($user_id, &$user_data, $auth, $ship_to_another, $notify_user) { if (!empty(Tygh::$app['session']['partner_data']['partner_id'])) { $user_exists = db_get_field('SELECT COUNT(*) FROM ?:users WHERE user_id = ?i', $user_id); $partner_exists = db_get_field( 'SELECT COUNT(*)' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', Tygh::$app['session']['partner_data']['partner_id'] ); if ((bool) $partner_exists && !(bool) $user_exists) { $user_data['partner_id'] = Tygh::$app['session']['partner_data']['partner_id']; } } } function fn_sd_affiliate_login_user_post($user_id, $cu_id, $udata, $auth, $condition, $result) { if (!empty($udata['partner_id'])) { Tygh::$app['session']['partner_data']['partner_id'] = $udata['partner_id']; } } function fn_sd_affiliate_update_ga_orders_info(&$orders_info) { foreach ($orders_info as $k => $order) { if ($order['user_id']) { $referrer = db_get_field('SELECT partner_id FROM ?:users WHERE user_id = ?i', $order['user_id']); $partner_data = db_get_row( 'SELECT firstname, lastname, user_id' . ' FROM ?:users' . ' WHERE user_id = ?i', $referrer ); if ($partner_data) { $partner_name = $partner_data['firstname'] . ' ' . $partner_data['lastname']; $partner_code = 'Partner №' . $partner_data['user_id']; $orders_info[$k]['ga_company_name'] = $partner_name . ' (' . $partner_code . ')'; } } else { $partner = isset(Tygh::$app['session']['partner_data']['partner_id']) ? sd_YzMyYjYwOWYwODE2NWUyZGM5NjE2Zjk5(Tygh::$app['session']['partner_data']['partner_id']) : 0; if ($partner) { $partner_name = $partner['firstname'] . ' ' . $partner['lastname']; $partner_code = 'Partner №' . $partner['user_id']; $orders_info[$k]['ga_company_name'] = $partner_name . ' (' . $partner_code . ')'; } } } } function sd_ZTA2MDljZTM0NjkzMzU4NWIzNmQ2ZjRm($user_id) { $user_exists = db_get_field('SELECT user_id FROM ?:users WHERE user_id = ?i', $user_id); $result = !empty($user_exists); return $result; } function sd_ZjdhMzFhYzQ0OTM1YmFkYWZjNzM2MGE4($user_id) { $cnt_period = Registry::ifGet('addons.sd_affiliate.number_last_periods', 10); $start_date = sd_NDRiZTU3NTM1NGViY2M0ZDljN2Y3MzA5($cnt_period); if (!empty($start_date)) { $last_payouts = []; $max_amount = 0; while (!empty($cnt_period)) { switch (Registry::get('addons.sd_affiliate.payment_period')) { case '1w': $end_date = $start_date + SECONDS_IN_WEEK; break; case '2w': $end_date = strtotime('+2 week', $start_date); break; case '1m': $end_date = strtotime('+1 month', $start_date); break; } if ($cnt_period == 1) { $end_date = TIME; } $user_type = sd_NGE0MzQ0ZGZkOGI2NDdjZmM1MDE1OWJk($user_id); if (!empty($user_type) && $user_type == AffiliateUserTypes::PARTNER) { $last_payouts[$cnt_period]['amount'] = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:aff_partner_actions' . ' WHERE partner_id = ?i AND approved = ?s AND date >= ?i AND date <= ?i', $user_id, 'Y', $start_date, $end_date ); } elseif (!empty($user_type) && $user_type == AffiliateUserTypes::CUSTOMER) { $last_payouts[$cnt_period]['amount'] = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:aff_customer_actions' . ' WHERE partner_id = ?i AND approved = ?s AND date >= ?i AND date <= ?i', $user_id, 'Y', $start_date, $end_date ); } else { $last_payouts[$cnt_period]['amount'] = 0; } if (isset($last_payouts[$cnt_period]['amount']) && $max_amount < $last_payouts[$cnt_period]['amount']) { $max_amount = $last_payouts[$cnt_period]['amount']; } $last_payouts[$cnt_period]['range']['start'] = $start_date; $last_payouts[$cnt_period]['range']['end'] = $end_date - 1; $start_date = $end_date; --$cnt_period; } } if (empty($max_amount)) { $max_amount = 1; } return [$last_payouts, $max_amount]; } function sd_ODRhYmU5NTZiMDA4OWRmODM2OWE0MDEx($user_id) { $total = 0; if ($user_id) { $user_type = sd_NGE0MzQ0ZGZkOGI2NDdjZmM1MDE1OWJk($user_id); if (!empty($user_type) && $user_type == AffiliateUserTypes::PARTNER) { $total = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:aff_partner_actions' . ' WHERE partner_id = ?i AND approved = ?s', $user_id, 'Y' ); } elseif (!empty($user_type) && $user_type == AffiliateUserTypes::CUSTOMER) { $total = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:aff_customer_actions' . ' WHERE partner_id = ?i AND approved = ?s', $user_id, 'Y' ); } } return $total; } function sd_OTEwYjdkYmExMmVlODg2OTc5MDdhYzlk($partner_id, $company_id = 0) { $new_payout = []; $payout_id = 0; $partner_type = db_get_field('SELECT user_type FROM ?:users WHERE user_id = ?i', $partner_id); $where_condition = db_quote('approved = ?s AND payout_id = ?i AND partner_id = ?i', 'Y', 0, $partner_id); if ($partner_type == AffiliateUserTypes::PARTNER) { $new_payout['amount'] = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:aff_partner_actions' . ' WHERE ?p', $where_condition ); if (!empty($new_payout['amount'])) { $new_payout['amount'] = floatval($new_payout['amount']); if (sd_YTNhYmE0MTM3MjU4ODc1MWFlZTIzNjE1($partner_id, $new_payout['amount'], '-')) { $update_data = [ 'partner_id' => $partner_id, 'amount' => $new_payout['amount'], 'status' => AffiliateStatuses::OPEN, 'date' => TIME, 'company_id' => !empty($company_id) ? $company_id : fn_get_runtime_company_id(), ]; $payout_id = db_query('INSERT INTO ?:affiliate_payouts ?e', $update_data); if (!empty($payout_id)) { db_query( 'UPDATE ?:aff_partner_actions' . ' SET ?u' . ' WHERE ?p', ['payout_id' => $payout_id], $where_condition ); } } } } else { $new_payout['amount'] = db_get_field( 'SELECT SUM(amount)' . ' FROM ?:aff_customer_actions' . ' WHERE ?p', $where_condition ); if (!empty($new_payout['amount'])) { $new_payout['amount'] = floatval($new_payout['amount']); if (Registry::get('addons.sd_affiliate.allow_all_customers_be_affiliates') == 'Y' && Registry::get('addons.reward_points.status') == 'A' ) { $update_data = [ 'partner_id' => $partner_id, 'amount' => $new_payout['amount'], 'status' => AffiliateStatuses::SUCCESSFUL, 'date' => TIME, 'company_id' => !empty($company_id) ? $company_id : fn_get_runtime_company_id(), ]; $payout_id = db_query('INSERT INTO ?:aff_customer_payouts ?e', $update_data); if (!empty($payout_id)) { db_query( 'UPDATE ?:aff_customer_actions' . ' SET ?u' . ' WHERE ?p', ['payout_id' => $payout_id], $where_condition ); } } else { fn_set_notification( 'E', __('error'), __('addons.sd_affiliate.allow_all_customers_be_affiliates_or_reward_points_disabled') ); } } } return $payout_id; } function sd_ZDU3OGQxNDE3MGNjZGJjMjkyMzdmN2Vj($user_id, $lang_code = CART_LANGUAGE) { if (empty($user_id)) { return false; } $plan_id = db_get_field( 'SELECT plan_id' . ' FROM ?:affiliate_plans' . ' WHERE plan_type = ?s AND status = ?s', AffiliateUserTypes::CUSTOMER, 'A' ); if (empty($plan_id)) { return false; } $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, $lang_code); return $plan_data; } function sd_MDNmNjdmNDVmZjQxMzlmMDUzNDJjZDc4($user_id, $referrer_partner_id) { if (!empty($user_id)) { db_query('UPDATE ?:users SET user_type = ?s WHERE user_id = ?i', AffiliateUserTypes::PARTNER, $user_id); $update_data = [ 'user_id' => $user_id, 'approved' => UserStatuses::NOAPPROVED, 'plan_id' => 0, 'balance' => 0.00, 'referrer_partner_id' => $referrer_partner_id, ]; if (Registry::get('addons.sd_affiliate.automatic_approval_affiliates') == 'Y') { $update_data['approved'] = UserStatuses::APPROVED; } $result = sd_MmM0NzU0Njk1OWUwZGYyMDY3MDcyOTBh($user_id, $update_data); if (!empty($result) && AREA == 'A') { $user_data = fn_get_user_info($user_id); sd_NGFiNWNjNDk5NDUyZDY2MmVkMTA4ZjBm($user_data); } elseif (!empty($result)) { $user_data = fn_get_user_info($user_id); sd_NGFiNWNjNDk5NDUyZDY2MmVkMTA4ZjBm($user_data); if (Registry::get('addons.sd_affiliate.automatic_approval_affiliates') == 'Y') { fn_set_notification('N', __('notice'), __('aff_successfully_registered'), 'S'); } else { fn_set_notification('N', __('notice'), __('addons.sd_affiliate.become_affiliate_successfully'), 'S'); } } } else { fn_set_notification('E', __('error'), __('addons.sd_affiliate.become_affiliate_failed')); } } function sd_NGIwYWU3MjVkOTZmZWRjNmNhMmE1MzQ1($promotion_ids, $plan_id) { $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, DESCR_SL); $_promotion_ids = $plan_data['promotion_ids']; foreach ($_promotion_ids as $promotion_id => $prod_name) { if (in_array($promotion_id, $promotion_ids)) { unset($_promotion_ids[$promotion_id]); } } $plan_data['promotion_ids'] = $_promotion_ids; return sd_NzU3MTY2N2M4OTk5ZWY1YmFmZjExMTY1($plan_data, $plan_id, DESCR_SL); } function sd_ZjNmZmFhNTg3NGIyNTkzYWNlZjZlM2E3($category_ids, $plan_id) { $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, DESCR_SL); $_categories_ids = $plan_data['category_ids']; if (!empty($_categories_ids) && is_array($_categories_ids)) { foreach ($_categories_ids as $cat_id => $prod_name) { if (in_array($cat_id, $category_ids)) { unset($_categories_ids[$cat_id]); } } } $plan_data['category_ids'] = $_categories_ids; return sd_NzU3MTY2N2M4OTk5ZWY1YmFmZjExMTY1($plan_data, $plan_id, DESCR_SL); } function sd_ZGZjNjk4MGMyYWEzYWQ4NzIyNjlmYjVh($company_ids, $plan_id) { $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, DESCR_SL); $_company_ids = $plan_data['company_ids']; if (!empty($_company_ids) && is_array($_company_ids)) { foreach ($_company_ids as $company_id => $prod_name) { if (in_array($company_id, $company_ids)) { unset($_company_ids[$company_id]); } } } $plan_data['company_ids'] = $_company_ids; return sd_NzU3MTY2N2M4OTk5ZWY1YmFmZjExMTY1($plan_data, $plan_id, DESCR_SL); } function sd_Y2RjZGQyMDE1OTc1YzdhOGVlNWVmZjRj($product_ids, $plan_id) { $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, DESCR_SL); $_products_ids = $plan_data['product_ids']; if (!empty($_products_ids) && is_array($_products_ids)) { foreach ($_products_ids as $prod_id => $prod_name) { if (in_array($prod_id, $product_ids)) { unset($_products_ids[$prod_id]); } } } $plan_data['product_ids'] = $_products_ids; return sd_NzU3MTY2N2M4OTk5ZWY1YmFmZjExMTY1($plan_data, $plan_id, DESCR_SL); } function sd_YTcxOTcyZGEyODJmNDAxMGNiZWNhNTNl($commission_ids, $plan_id) { $plan_data = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($plan_id, DESCR_SL); if (!empty($plan_data)) { foreach ($commission_ids as $com_id) { unset($plan_data['commissions'][$com_id]); } return sd_NzU3MTY2N2M4OTk5ZWY1YmFmZjExMTY1($plan_data, $plan_id, DESCR_SL); } return $plan_id; } function sd_OGNkZDc3ZWRiZTkwNmQzZTFkMjg2NzJk($affiliate_plans_ids) { if (!empty($affiliate_plans_ids)) { if (!is_array($affiliate_plans_ids)) { $affiliate_plans_ids = explode(',', $affiliate_plans_ids); } db_query( 'DELETE FROM ?:common_descriptions' . ' WHERE object_holder = ?s AND object_id IN (?n)', 'affiliate_plans', $affiliate_plans_ids ); db_query('DELETE FROM ?:affiliate_plans WHERE plan_id IN (?n)', $affiliate_plans_ids); return true; } return false; } function sd_NzU3MTY2N2M4OTk5ZWY1YmFmZjExMTY1($data, $plan_id, $lang_code = DESCR_SL) { $data['plan_type'] = empty($data['plan_type']) ? AffiliateUserTypes::PARTNER : $data['plan_type']; if (isset($data['commissions'])) { $data['commissions'] = array_map('floatval', $data['commissions']); $data['commissions'] = implode(';', $data['commissions']); } if (isset($data['payout_types'])) { if ($data['plan_type'] == AffiliateUserTypes::CUSTOMER) { foreach ($data['payout_types'] as $p_type => $type_data) { $data['payout_types'][$p_type]['value'] = round($type_data['value']); } } $data['payout_types'] = sd_MDk1NTg1YzkwZDQ5NmM4MDI2Mjc4OTFl($data['payout_types']); $data['payout_types'] = serialize($data['payout_types']); } if (isset($data['sales']) || isset($data['product_ids'])) { $data['product_ids'] = isset($data['sales']) ? $data['sales'] : $data['product_ids']; $data['product_ids'] = sd_MDk1NTg1YzkwZDQ5NmM4MDI2Mjc4OTFl($data['product_ids']); $data['product_ids'] = serialize($data['product_ids']); unset($data['sales']); } if (isset($data['company_sales']) ||isset($data['company_ids'])) { $data['company_ids'] = isset($data['company_sales']) ? $data['company_sales'] : $data['company_ids']; $data['company_ids'] = sd_MDk1NTg1YzkwZDQ5NmM4MDI2Mjc4OTFl($data['company_ids']); $data['company_ids'] = serialize($data['company_ids']); unset($data['company_sales']); } if (isset($data['category_sales']) || isset($data['category_ids'])) { $data['category_ids'] = isset($data['category_sales']) ? $data['category_sales'] : $data['category_ids']; $data['category_ids'] = sd_MDk1NTg1YzkwZDQ5NmM4MDI2Mjc4OTFl($data['category_ids']); $data['category_ids'] = serialize($data['category_ids']); } if (isset($data['coupons']) || isset($data['promotion_ids'])) { $data['promotion_ids'] = isset($data['coupons']) ? $data['coupons'] : $data['promotion_ids']; $data['promotion_ids'] = sd_MDk1NTg1YzkwZDQ5NmM4MDI2Mjc4OTFl($data['promotion_ids']); $data['promotion_ids'] = serialize($data['promotion_ids']); } if (!empty($plan_id)) { db_query('UPDATE ?:affiliate_plans SET ?u WHERE plan_id = ?i', $data, $plan_id); $data['object'] = $data['name']; db_query( 'UPDATE ?:common_descriptions' . ' SET ?u' . ' WHERE object_id = ?i AND object_holder = ?s AND lang_code = ?s', $data, $plan_id, 'affiliate_plans', $lang_code ); } else { $plan_id = $data['plan_id'] = db_query('INSERT INTO ?:affiliate_plans ?e', $data); if (!empty($plan_id)) { $_data = [ 'object' => $data['name'], 'description' => $data['description'], 'object_id' => $plan_id, 'object_holder' => 'affiliate_plans', ]; foreach (Languages::getAll() as $_data['lang_code'] => $_ldata) { db_query('INSERT INTO ?:common_descriptions ?e', $_data); } } } return $plan_id; } function sd_MDk1NTg1YzkwZDQ5NmM4MDI2Mjc4OTFl($values) { if (!empty($values) && is_array($values)) { foreach ($values as $key => $item) { $values[$key]['value'] = floatval($item['value']); if ($values[$key]['value'] < 0) { $values[$key]['value'] = 0; } if (!empty($item['value_type']) && $item['value_type'] == 'P' && $values[$key]['value'] > 100) { $values[$key]['value'] = 100; } } } return $values; } function sd_MmNiZmRiNmQ3ZWFmODZkZTUwN2ViZDFh($params, $items_per_page = 0, $lang_code = CART_LANGUAGE) { $default_params = [ 'page' => 1, 'items_per_page' => $items_per_page, ]; $params['plan_type'] = empty($params['plan_type']) ? AffiliateUserTypes::PARTNER : $params['plan_type']; $params = array_merge($default_params, $params); $limit = ''; $condition = ''; if (!empty($params['items_per_page'])) { $params['total_items'] = db_get_field( 'SELECT COUNT(*)' . ' FROM ?:affiliate_plans as plans' . ' LEFT JOIN ?:common_descriptions as com_descr ON object_holder = ?s' . ' AND object_id = plan_id AND lang_code = ?s' . ' WHERE 1 ORDER BY object', 'affiliate_plans', $lang_code ); $limit = db_paginate($params['page'], $params['items_per_page']); } $condition = db_quote('plans.plan_type = ?s', $params['plan_type']); $plans = db_get_hash_array( 'SELECT plans.plan_id, plans.company_id, object as name,' . ' COUNT(user_id) as count_partners, status, plans.plan_type, plans.is_default' . ' FROM ?:affiliate_plans as plans' . ' LEFT JOIN ?:common_descriptions as com_descr ON object_holder = ?s' . ' AND object_id = plans.plan_id AND lang_code = ?s' . ' LEFT JOIN ?:aff_partner_profiles ON plans.plan_id = ?:aff_partner_profiles.plan_id' . ' AND ?:aff_partner_profiles.approved = ?s' . ' WHERE ?p GROUP BY plans.plan_id ORDER BY object ?p', 'plan_id', 'affiliate_plans', $lang_code, UserStatuses::APPROVED, $condition, $limit ); return [$plans, $params]; } function sd_NTg0NmM4OTU4ZTEzODkwYTBiZWNhYjky($data) { if (!empty($data['share_objects'])) { $plan_affiliates = db_get_fields( 'SELECT user_id' . ' FROM ?:aff_partner_profiles' . ' WHERE plan_id = ?i', $data['plan_id'] ); foreach ($plan_affiliates as $user_id) { $affiliates_company_id = db_get_field('SELECT company_id FROM ?:users WHERE user_id = ?i', $user_id); if (!in_array($affiliates_company_id, $data['share_objects']['affiliate_plans'][$data['plan_id']])) { db_query('UPDATE ?:aff_partner_profiles SET plan_id = 0 WHERE user_id = ?i', $user_id); } } } } function sd_NGQ3NjgyMzhjZTIyZjA4NGZhMTcxYTQ1($banner_id) { if (empty($banner_id)) { return false; } $banner_type = db_get_field('SELECT type FROM ?:aff_banners WHERE banner_id = ?i', $banner_id); db_query('DELETE FROM ?:aff_banner_descriptions WHERE banner_id = ?i', $banner_id); db_query('DELETE FROM ?:aff_banners WHERE banner_id = ?i', $banner_id); if ($banner_type == BannerTypes::GRAPHICS) { $banner_images_ids = db_get_fields( 'SELECT banner_image_id' . ' FROM ?:aff_banner_images' . ' WHERE banner_id = ?i', $banner_id ); foreach ($banner_images_ids as $banner_image_id) { fn_delete_image_pairs($banner_image_id, 'aff_images'); } db_query('DELETE FROM ?:aff_banner_images WHERE banner_id = ?i', $banner_id); } return true; } function sd_NzY2MTc3NDg4OTQyMDVmMGRmZTY2ZWMw($image_file_path) { if (!empty($image_file_path) && is_array($image_file_path)) { $image_banner = reset($image_file_path); if ($image_banner == 'banner') { return false; } } return true; } function sd_MWY2NjFiNmQ4MTVhMDExYWQ2NjZkZjhm($banner_id, $pair_data, $main_lang_code = DESCR_SL) { if (!empty($pair_data)) { $pair_id = reset($pair_data); $lang_codes = Languages::getAll(); unset($lang_codes[$main_lang_code]); foreach ($lang_codes as $lang_code => $lang_data) { $_banner_image_id = db_query( 'INSERT INTO ?:aff_banner_images (banner_id, lang_code) VALUE(?i, ?s)', $banner_id, $lang_code ); fn_add_image_link($_banner_image_id, $pair_id); } } } function sd_NDdiYjg2YWJhNmZkNjYzMzU1Mjg2NWIz($data, $banner_id, $lang_code = DESCR_SL, $image_file_path = ['banner']) { if (!empty($data['width'])) { $data['width'] = abs(intval($data['width'])); } if (!empty($data['height'])) { $data['height'] = abs(intval($data['height'])); } if ($data['type'] == BannerTypes::PRODUCTS) { $data['data'] = serialize($data['data']); } if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $data['company_id'] = Registry::get('runtime.company_id'); if (!empty($banner_id)) { $banner_company_id = db_get_field( 'SELECT company_id' . ' FROM ?:aff_banners' . ' WHERE banner_id = ?i', $banner_id ); if ($banner_company_id != $data['company_id']) { return false; } } if ($data['link_to'] == BannerLinkTypes::PRODUCT_GROUPS && !empty($data['data'])) { $group_company_id = db_get_field( 'SELECT company_id' . ' FROM ?:aff_groups' . ' WHERE group_id = ?i', $data['data'] ); if ($data['company_id'] != $group_company_id) { $data['data'] = 0; } } } else { return false; } } if (!empty($banner_id)) { db_query('UPDATE ?:aff_banners SET ?u WHERE banner_id = ?i', $data, $banner_id); db_query( 'UPDATE ?:aff_banner_descriptions' . ' SET ?u' . ' WHERE banner_id = ?i AND lang_code = ?s', $data, $banner_id, $lang_code ); if ($data['type'] == BannerTypes::GRAPHICS) { $banner_image_id = db_get_field( 'SELECT banner_image_id' . ' FROM ?:aff_banner_images' . ' WHERE banner_id = ?i AND lang_code = ?s', $banner_id, $lang_code ); $banner_image_exist = !empty($banner_image_id); $banner_is_multilang = Registry::get('addons.sd_affiliate.aff_banner_multilang') == 'Y'; $image_is_update = sd_NzY2MTc3NDg4OTQyMDVmMGRmZTY2ZWMw($image_file_path); if ($banner_is_multilang) { if ($banner_image_exist && $image_is_update) { fn_delete_image_pairs($banner_image_id, 'aff_images'); db_query( 'DELETE FROM ?:aff_banner_images' . ' WHERE banner_id = ?i AND lang_code = ?s', $banner_id, $lang_code ); $banner_image_exist = false; } } if ($image_is_update && !$banner_image_exist) { $banner_image_id = db_query( 'INSERT INTO ?:aff_banner_images (banner_id, lang_code) VALUE(?i, ?s)', $banner_id, $lang_code ); } $pair_data = fn_attach_image_pairs('banner', 'aff_images', $banner_image_id, $lang_code); if (!$banner_is_multilang && !$banner_image_exist) { sd_MWY2NjFiNmQ4MTVhMDExYWQ2NjZkZjhm($banner_id, $pair_data, $lang_code); } } } else { $banner_id = $data['banner_id'] = db_query('INSERT INTO ?:aff_banners ?e', $data); foreach (Languages::getAll() as $data['lang_code'] => $v) { db_query('INSERT INTO ?:aff_banner_descriptions ?e', $data); } if ($data['type'] == BannerTypes::GRAPHICS) { if (sd_NzY2MTc3NDg4OTQyMDVmMGRmZTY2ZWMw($image_file_path)) { $banner_image_id = db_get_next_auto_increment_id('aff_banner_images'); $pair_data = fn_attach_image_pairs('banner', 'aff_images', $banner_image_id, $lang_code); if (!empty($pair_data)) { $data_banner_image = [ 'banner_image_id' => $banner_image_id, 'banner_id' => $banner_id, 'lang_code' => $lang_code ]; db_query('INSERT INTO ?:aff_banner_images ?e', $data_banner_image); sd_MWY2NjFiNmQ4MTVhMDExYWQ2NjZkZjhm($banner_id, $pair_data, $lang_code); } } } } return $banner_id; } function sd_YTVlZWZmMzM4OTg2MDhiMDM4ZWQzODM5($group_ids) { $groups_names = []; $skip_record = false; foreach ($group_ids as $group_id) { if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $group_company_id = db_get_field('SELECT company_id FROM ?:aff_groups WHERE group_id = ?i', $group_id); if ($group_company_id != Registry::get('runtime.company_id')) { $skip_record = true; } } } if (!$skip_record) { $deleted_groups_names[] = sd_YzZmZWU1MDViOGUzMDhjMDA2NjAyNjU2($group_id, DESCR_SL); db_query('DELETE FROM ?:aff_group_descriptions WHERE group_id = ?i', $group_id); db_query('DELETE FROM ?:aff_groups WHERE group_id = ?i', $group_id); } else { $undeleted_groups_names[] = sd_YzZmZWU1MDViOGUzMDhjMDA2NjAyNjU2($group_id, DESCR_SL); } } if (!empty($deleted_groups_names)) { $groups_names = '&nbsp;-&nbsp;' . implode('<br />&nbsp;-&nbsp;', $deleted_groups_names); fn_set_notification('N', __('information'), __('deleted_product_groups') . ':<br />' . $groups_names); } if (!empty($undeleted_groups_names)) { $groups_names = '&nbsp;-&nbsp;' . implode('<br />&nbsp;-&nbsp;', $undeleted_groups_names); fn_set_notification('W', __('warning'), __('undeleted_product_groups') . ':<br />' . $groups_names); } } function sd_ODk3MTU5YWM2M2Y1ZjFiYTdkNWVhMDUy($data, $group_id, $lang_code = DESCR_SL) { if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $data['company_id'] = Registry::get('runtime.company_id'); if (!empty($group_id)) { $group_company_id = db_get_field('SELECT company_id FROM ?:aff_groups WHERE group_id = ?i', $group_id); if ($group_company_id != $data['company_id']) { return false; } } } else { return false; } } if (!empty($group_id)) { db_query('UPDATE ?:aff_groups SET ?u WHERE group_id = ?i', $data, $group_id); db_query( 'UPDATE ?:aff_group_descriptions' . ' SET ?u' . ' WHERE group_id = ?i AND lang_code = ?s', $data, $group_id, $lang_code ); } else { $group_id = $data['group_id'] = db_query('INSERT INTO ?:aff_groups ?e', $data); foreach (Languages::getAll() as $data['lang_code'] => $v) { db_query('INSERT INTO ?:aff_group_descriptions ?e', $data); } } return $group_id; } function sd_ZWZhZjYyOTczMDk5MDU0ZGI3OTJjZTU0($params, $items_per_page = 0, $lang_code = DESCR_SL) { $default_params = [ 'link_to' => BannerLinkTypes::CATEGORIES, 'page' => 1, 'items_per_page' => $items_per_page, ]; $params = array_merge($default_params, $params); $condition = ''; if (!empty($params['link_to'])) { $condition .= db_quote(' AND ?:aff_groups.link_to IN (?a)', $params['link_to']); } if (!empty($params['is_avail'])) { $condition .= db_quote(' AND ?:aff_groups.status = ?s', 'A'); } if (fn_allowed_for('ULTIMATE')) { if (Registry::get('runtime.company_id')) { $condition .= db_quote(' AND ?:aff_groups.company_id = ?i', Registry::get('runtime.company_id')); } } $limit = ''; if (!empty($params['items_per_page'])) { $params['total_items'] = db_get_field( 'SELECT COUNT(*)' . ' FROM ?:aff_groups' . ' LEFT JOIN ?:aff_group_descriptions ON ?:aff_group_descriptions.group_id = ?:aff_groups.group_id' . ' AND ?:aff_group_descriptions.lang_code = ?s' . ' WHERE 1 ?p' . ' ORDER BY ?:aff_group_descriptions.name', $lang_code, $condition ); $limit = db_paginate($params['page'], $params['items_per_page']); } $groups = db_get_hash_array( 'SELECT *' . ' FROM ?:aff_groups' . ' LEFT JOIN ?:aff_group_descriptions ON ?:aff_group_descriptions.group_id = ?:aff_groups.group_id' . ' AND ?:aff_group_descriptions.lang_code = ?s' . ' WHERE 1 ?p' . ' ORDER BY ?:aff_group_descriptions.name ?p', 'group_id', $lang_code, $condition, $limit ); if (!empty($groups) && is_array($groups)) { foreach ($groups as $group_id => $group_data) { $groups[$group_id] = sd_NWMyZGQ5N2ViNTk2NDkxYzdkNGJkZjM5($group_data); } } return [$groups, $params]; } function sd_NGE0MzQ0ZGZkOGI2NDdjZmM1MDE1OWJk($user_id) { $result = ''; if (!empty($user_id)) { $result = db_get_field('SELECT user_type FROM ?:users WHERE user_id = ?i', $user_id); } return $result; } function sd_YjQyZGU1YWFkMDc4OTkzNzU2OGYzOThj($payout_id, $user_type) { if ($user_type == AffiliateUserTypes::PARTNER) { $payout_data = db_get_row('SELECT * FROM ?:affiliate_payouts WHERE payout_id = ?i', $payout_id); } else { $payout_data = db_get_row('SELECT * FROM ?:aff_customer_payouts WHERE payout_id = ?i', $payout_id); } if (!empty($payout_data['partner_id'])) { $payout_data['partner']['user_type'] = db_get_field( 'SELECT user_type' . ' FROM ?:users' . ' WHERE user_id = ?i', $payout_data['partner_id'] ); $_REQUEST['user_type'] = $payout_data['partner']['user_type']; if ($payout_data['partner']['user_type'] == AffiliateUserTypes::CUSTOMER) { $payout_data['plan'] = sd_ZDU3OGQxNDE3MGNjZGJjMjkyMzdmN2Vj($payout_data['partner_id']); } $payout_data['partner'] = sd_YzMyYjYwOWYwODE2NWUyZGM5NjE2Zjk5($payout_data['partner_id']); $payout_data['partner']['partner_exists'] = sd_ZTA2MDljZTM0NjkzMzU4NWIzNmQ2ZjRm($payout_data['partner_id']); if (!empty($payout_data['partner']['firstname']) || !empty($payout_data['partner']['lastname'])) { $payout_data['partner']['affiliate'] = $payout_data['partner']['firstname'] . ' ' . $payout_data['partner']['lastname']; } else { $payout_data['partner']['affiliate'] = __('affiliate') . '_' . $payout_data['partner_id']; } } if (!empty($payout_data['partner']['plan_id']) && $payout_data['partner']['user_type'] == AffiliateUserTypes::PARTNER) { $payout_data['plan'] = sd_Y2M5OWY4ZDllM2MyODUxM2Q1N2VjYjA3($payout_data['partner']['plan_id'], DESCR_SL); } list($payout_data['actions'], $search) = sd_MmMxMDg1NjBmYjhlY2NhZjA0M2ZmY2Q4( $_REQUEST, Registry::get('settings.Appearance.admin_elements_per_page') ); if ($user_type == AffiliateUserTypes::PARTNER) { $payout_data['date_range']['min'] = db_get_field( 'SELECT MIN(date)' . ' FROM ?:aff_partner_actions' . ' WHERE payout_id = ?i', $payout_id ); $payout_data['date_range']['max'] = db_get_field( 'SELECT MAX(date)' . ' FROM ?:aff_partner_actions' . ' WHERE payout_id = ?i', $payout_id ); } else { $payout_data['date_range']['min'] = db_get_field( 'SELECT MIN(date)' . ' FROM ?:aff_customer_actions' . ' WHERE payout_id = ?i', $payout_id ); $payout_data['date_range']['max'] = db_get_field( 'SELECT MAX(date)' . ' FROM ?:aff_customer_actions' . ' WHERE payout_id = ?i', $payout_id ); } return [$payout_data, $search]; } function sd_YTZhMTFhZGEyZWY3ZTEwYjYwMGUyODky($id, $cart_poducts) { $result = 0; $promo = fn_get_promotion_data($id); foreach ($promo['conditions']['conditions'] as $condition) { if ($condition['condition'] == 'affiliate_link' && $condition['operator'] == 'nin') { $result = intval(substr($condition['value'], 0, 1)); } } if (!empty(Tygh::$app['session']['partner_data']) && !(!empty($promo) && $promo['zone'] == 'cart' && empty($cart_poducts)) ) { $plan_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw(Tygh::$app['session']['partner_data']['partner_id']); $result = $plan_data['plan_id']; } return $result; } function sd_YzllM2MyYmI4MWEwMDYzY2Y2MzRjNzlh() { $layouts = db_get_hash_single_array( 'SELECT layout_id, name' . ' FROM ?:bm_layouts' . ' WHERE show_to_affiliate = ?s', ['layout_id', 'name'], 'Y' ); return $layouts; } function fn_sd_affiliate_send_mail_pre($transport, &$message, &$area, $lang_code) { if (!empty($message['data']['user_data']['user_type']) && $message['data']['user_data']['user_type'] == 'P' && $message['template_code'] == 'create_profile' ) { $area = 'A'; $profile_fields = fn_get_profile_fields($message['data']['user_data']['user_type']); if (Registry::get('settings.General.quick_registration') == 'Y') { $profile_fields['C'] = ''; } $usergroups = fn_get_usergroups(); $contact_fields = []; if (!empty($profile_fields['C'])) { $contact_fields = fn_split($profile_fields['C'], 2, true, false); } $message['data']['usergroups'] = $usergroups; $message['data']['url'] = !empty($message['data']['user_data']['company_id']) ? fn_url('?company_id=' . $message['data']['user_data']['company_id'], 'C') : fn_url('', 'C'); $message['data']['is_allowed_for'] = !fn_allowed_for('ULTIMATE:FREE'); $message['data']['profile_fields'] = $profile_fields; $message['data']['contact_fields'] = $contact_fields; $message['template_code'] = 'affiliate_create_user'; } } function fn_settings_variants_addons_sd_affiliate_successful_order_statuses() { $statuses = fn_get_simple_statuses(STATUSES_ORDER); return $statuses; } function sd_Mzc5Y2M4OWVmNjZlYWU0NzA5ZDRkY2Ez($user_id) { $is_approved = false; if (!empty($user_id)) { $approved = db_get_field('SELECT approved FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_id); if (!empty($approved) && $approved == UserStatuses::APPROVED) { $is_approved = true; } } return $is_approved; } function sd_MDZlMGM3ODdiZTYwMWMzZGI0MWQ2OWM4($affiliate_parameter, $show_notification = false) { $result = false; $affiliate_parameter = str_replace(' ', '_', $affiliate_parameter); $already_exists = db_get_field( 'SELECT user_id' . ' FROM ?:aff_partner_profiles' . ' WHERE custom_aff_parameter = ?s', $affiliate_parameter ); if (empty($already_exists)) { $result = true; if ($show_notification) { fn_set_notification('N', __('notice'), __('addons.sd_affiliate.custom_affiliate_parameter_can_be_used')); } } else { if ($show_notification) { fn_set_notification('E', __('error'), __('addons.sd_affiliate.custom_affiliate_parameter_already_exists')); } } return $result; } function sd_MDk4YjFmYTdkOWQzMjI0ZjNjZDM2Mzhj($affiliate_parameter, $user_id) { if (!empty($affiliate_parameter) && !empty($user_id)) { $affiliate_parameter = str_replace(' ', '_', $affiliate_parameter); $is_unique = sd_MDZlMGM3ODdiZTYwMWMzZGI0MWQ2OWM4($affiliate_parameter, false); if ($is_unique) { db_query( 'UPDATE ?:aff_partner_profiles' . ' SET custom_aff_parameter = ?s' . ' WHERE user_id = ?i', $affiliate_parameter, $user_id ); fn_set_notification('N', __('notice'), __('addons.sd_affiliate.custom_affiliate_parameter_saved_successfully')); } else { fn_set_notification('E', __('error'), __('addons.sd_affiliate.custom_affiliate_parameter_already_exists')); } } elseif (!empty($user_id)) { db_query('UPDATE ?:aff_partner_profiles SET custom_aff_parameter = ?s WHERE user_id = ?i', '', $user_id); } return true; } function sd_NjIxNWQ3YzM3ZTMzZTFiNDgxYmIxMTAx($user_id) { $aff_parameter = ''; if (!empty($user_id)) { $aff_parameter = db_get_field( 'SELECT custom_aff_parameter' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $user_id ); } return $aff_parameter; } function sd_NGI4ZjZmNjE5ZTUzMTVkYzEyNWEyMzVh($custom_affiliate_parameter) { if (!empty($custom_affiliate_parameter)) { $affiliate_id = db_get_field( 'SELECT user_id' . ' FROM ?:aff_partner_profiles' . ' WHERE custom_aff_parameter = ?s', $custom_affiliate_parameter ); if (!empty($affiliate_id)) { if (empty(Tygh::$app['session']['partner_data'])) { Tygh::$app['session']['partner_data'] = []; } if (empty(Tygh::$app['session']['partner_data']['partner_id'])) { Tygh::$app['session']['partner_data']['partner_id'] = $affiliate_id; } } } } function fn_sd_affiliate_update_company($company_data, $company_id, $lang_code, $action) { if ($action == 'add' && fn_allowed_for('MULTIVENDOR')) { $partner_action = 'new_vendor'; if (!empty(Tygh::$app['session']['partner_data']['partner_id'])) { sd_OWQzMGUwNzVkM2VlN2Y5MGIyN2Q4ZGYy( $partner_action, !empty(Tygh::$app['session']['partner_data']['banner_id']) ? Tygh::$app['session']['partner_data']['banner_id'] : 0, Tygh::$app['session']['partner_data']['partner_id'], $company_id, [AFFILIATE_DATA_TYPE_REFERER => !empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''] ); } } } function fn_sd_affiliate_url_pre($url, &$area, $protocol, $lang_code) { if ($area == AffiliateUserTypes::PARTNER) { $area = 'C'; } } function fn_sd_affiliate_url_post(&$_url, $area, $url, $protocol, $company_id_in_url, $lang_code) { if (!empty(Tygh::$app['session']['auth']['user_id']) && Tygh::$app['session']['auth']['user_type'] == AffiliateUserTypes::PARTNER ) { $new_url = str_replace('&amp;', '&', $_url); if (($pos = strpos($new_url, '?')) !== false) { $new_url = substr($new_url, $pos + 1); } parse_str($new_url, $parameters); $dispatches_with_parameters = fn_get_schema('sd_affiliate', 'dispatches_with_parameters'); $aff_id_pos = strpos($new_url, 'aff_id'); if (!empty($parameters['dispatch']) && in_array($parameters['dispatch'], $dispatches_with_parameters) && !$aff_id_pos ) { $_url .= '&aff_id=' . Tygh::$app['session']['auth']['user_id']; } } } function sd_MjUwN2ZlOTllZmJjNDFiYWMzYTQzNTg3($url, $param) { $result = false; if (!empty($param) && !empty($url)) { $param_pos = strpos($url, $param); $result = !empty($param_pos); } return $result; } function sd_ZTMyNGUyZTUwZDdhZmE4ODQzNTFmNGY4($user_id) { $coupons = []; $params = [ 'coupons' => true, 'expand' => true, ]; if (!empty($user_id)) { list($promotions) = fn_get_promotions($params); foreach ($promotions as $promotion_id => $promotion_data) { if (empty($promotion_data['conditions']['conditions'])) { continue; } foreach ($promotion_data['conditions']['conditions'] as $condition) { if (empty($condition['condition']) || $condition['condition'] != 'coupon_code') { continue; } if (!empty($condition['operator']) && $condition['operator'] == 'eq') { if (!empty($condition['value']) && !sd_MmI1ZDY3MmIzNTc0NDU5NmVkNDUxMzdm($condition['value'], $user_id) && !in_array($condition['value'], $coupons) ) { $coupons[] = $condition['value']; } } elseif (!empty($condition['operator']) && $condition['operator'] == 'in') { if (empty($condition['value'])) { continue; } $values = explode(',', $condition['value']); foreach ($values as $code) { if (!empty($code) && !sd_MmI1ZDY3MmIzNTc0NDU5NmVkNDUxMzdm($code, $user_id) && !in_array($code, $coupons) ) { $coupons[] = $code; } } } } } } return $coupons; } function sd_MmI1ZDY3MmIzNTc0NDU5NmVkNDUxMzdm($coupon_code, $user_id) { $result = true; if (!empty($coupon_code)) { $aff_id = db_get_field('SELECT user_id FROM ?:aff_partner_profiles WHERE coupon_code = ?s', $coupon_code); if (empty($aff_id) || $aff_id == $user_id) { $result = false; } } return $result; } function sd_NzJhMDI2ZjJlNDk3MjBmNzI1N2JlNTUz($user_id) { return !empty($user_id) ? db_get_field('SELECT coupon_code FROM ?:aff_partner_profiles WHERE user_id = ?i', $user_id) : ''; } function sd_OGQyODdkNGJmMDY2MmFmNjg3YmMzZGRl($promotion_ids, $auth) { $coupons = []; if (!empty($promotion_ids)) { $params = [ 'promotion_id' => array_keys($promotion_ids), 'expand' => true, ]; list($coupons) = fn_get_promotions($params); $aff_prefix = Registry::get('addons.sd_affiliate.coupon_prefix_delim'); $use_affiliate_id = Registry::get('addons.sd_affiliate.use_affiliate_id'); foreach ($coupons as $promotion_id => $coupon_data) { if (isset($promotion_ids[$promotion_id]) && $coupon_data['status'] == 'A') { $coupons[$promotion_id]['use_coupon'] = $promotion_ids[$promotion_id]; foreach ($coupons[$promotion_id]['conditions']['conditions'] as $cnd) { if (!empty($cnd['condition']) && $cnd['condition'] == 'coupon_code') { if ($cnd['operator'] == 'in') { $coupon_values = fn_explode(',', $cnd['value']); foreach ($coupon_values as $coupon_code_value) { if ($use_affiliate_id == 'Y' && $aff_prefix) { $coupons[$promotion_id]['coupon_code'][] = $auth['user_id'] . $aff_prefix . $coupon_code_value; } else { $coupons[$promotion_id]['coupon_code'][] = sd_NmExYjJjOGQyNDI4MzJkNTE5OTFjMGJk($auth['user_id']) . $aff_prefix . $coupon_code_value; } } } else { if ($use_affiliate_id == 'Y' && $aff_prefix) { $coupons[$promotion_id]['coupon_code'][] = $auth['user_id'] . $aff_prefix . $cnd['value']; } else { $coupons[$promotion_id]['coupon_code'][] = sd_NmExYjJjOGQyNDI4MzJkNTE5OTFjMGJk($auth['user_id']) . $aff_prefix . $cnd['value']; } } } } if (empty($coupons[$promotion_id]['coupon_code'])) { unset($coupons[$promotion_id]); } } else { unset($coupons[$promotion_id]); } } } return $coupons; } function sd_Y2UyYzIwNmY0YWUzNjJiNjIyYmU4ZTIx(&$product, &$auth) { if (isset($product['exclude_from_calculate']) || (AREA == 'A' && !defined('ORDER_MANAGEMENT') && Registry::get('runtime.controller') != 'subscriptions') || floatval($product['price']) == 0 || (isset($product['points_info']['price']) && !(Registry::get('runtime.controller') == 'products' && Registry::get('runtime.mode') == 'options')) ) { return false; } if ((Registry::get('runtime.controller') == 'checkout' && isset($product['subtotal'])) || (defined('ORDER_MANAGEMENT') && (Registry::get('runtime.mode') == 'totals' || Registry::get('runtime.mode') == 'summary')) ) { if (Registry::get('addons.reward_points.auto_price_in_points') == 'Y' && (!isset($product['is_oper']) || $product['is_oper'] == 'N') ) { $per = Registry::get('addons.reward_points.point_rate'); $subtotal = $product['subtotal']; if (Registry::get('addons.reward_points.price_in_points_with_discounts') == 'N' && isset($product['discount']) ) { $subtotal = ($product['price'] + $product['discount']) * $product['amount']; } } else { $per = (!empty($product['original_price']) && floatval($product['original_price'])) ? fn_get_price_in_points($product['product_id'], $auth) / $product['original_price'] : 0; $subtotal = $product['original_price'] * $product['amount']; } } else { if (Registry::get('addons.reward_points.auto_price_in_points') == 'Y' && $product['is_oper'] == 'N' ) { $per = Registry::get('addons.reward_points.point_rate'); $subtotal = $product['price']; if (Registry::get('addons.reward_points.price_in_points_with_discounts') == 'N' && isset($product['discount']) ) { $subtotal = $product['price'] + $product['discount']; if (defined('ORDER_MANAGEMENT')) { $subtotal *= $product['amount']; } } } else { $per = (!empty($product['price']) && floatval($product['price'])) ? fn_get_price_in_points($product['product_id'], $auth) / $product['price'] : 0; $subtotal = $product['price']; } } $product['points_info']['raw_price'] = $per * $subtotal; $product['points_info']['price'] = ceil($product['points_info']['raw_price']); } function sd_M2VlNTgwMGNkNDA3MWY0MzhkNjI0MmJh(&$params) { $setting_id = db_get_field( 'SELECT object_id' . ' FROM ?:settings_objects' . ' WHERE name = ?s', 'allow_all_customers_be_affiliates' ); if (!empty($setting_id) && !empty($params['addon_data']['options'][$setting_id]) && $params['addon_data']['options'][$setting_id] == 'Y' && Registry::get('addons.reward_points.status') != 'A' ) { Settings::instance()->updateValueById($setting_id, 'N'); fn_set_notification('W', __('warning'), __('addons.sd_affiliate.reward_points_addon_disabled')); } } function sd_MTZkMjU4YTU5ZGYyZjc1OGIwZGZlYmE0($setting_name, $new_value) { $updated = false; if (!empty($setting_name) && !empty($new_value)) { $setting_data = db_get_row('SELECT object_id, value FROM ?:settings_objects WHERE name = ?s', $setting_name); if (!empty($setting_data['object_id']) && $setting_data['value'] != $new_value) { Settings::instance()->updateValueById($setting_data['object_id'], $new_value); $updated = true; } } return $updated; } function fn_sd_affiliate_get_products_before_select( $params, $join, &$condition, $u_condition, $inventory_join_cond, $sortings, $total, $items_per_page, $lang_code, $having ) { if (!empty(Tygh::$app['session']['auth']['user_id']) && Tygh::$app['session']['auth']['user_type'] == AffiliateUserTypes::PARTNER && ((!empty($params['display']) && $params['display'] == 'sd_affiliate')) || Registry::get('runtime.controller') == 'banners_manager' ) { $plan_data = sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw(Tygh::$app['session']['auth']['user_id']); if (!empty($plan_data['product_ids'])) { $condition1 = db_quote('(products.product_id IN (?n))', array_keys($plan_data['product_ids'])); } if (!empty($plan_data['category_ids'])) { $plan_data['category_ids'] = array_keys($plan_data['category_ids']); $_ids = db_get_fields( 'SELECT a.category_id FROM ?:categories as a' . ' LEFT JOIN ?:categories as b ON b.category_id IN (?n)' . ' WHERE a.id_path LIKE CONCAT(b.id_path, ?s)', $plan_data['category_ids'], '/%' ); $plan_data['category_ids'] = fn_array_merge($plan_data['category_ids'], $_ids, false); $condition2 = db_quote('(?:categories.category_id IN (?n))', $plan_data['category_ids']); } $condition .= (!empty($condition1) && !empty($condition2)) ? db_quote(' AND (?p OR ?p) ', $condition1, $condition2) : (!empty($condition1) ? db_quote(' AND ?p ', $condition1) : (!empty($condition2) ? db_quote(' AND ?p ', $condition2) : '')); } } function fn_sd_affiliate_user_exist($user_id, $user_data, &$condition) { if (fn_allowed_for('ULTIMATE') && !empty($user_data['company_id']) && Registry::get('settings.Stores.share_users') == 'N' ) { $condition .= db_quote(' AND company_id = ?i', $user_data['company_id']); } } function sd_MjU4ZmEyNDMwOWE1OGZhMzVlMTU1NzVl($user_id = 0) { $affiliates = []; $params = [ 'user_type' => AffiliateUserTypes::PARTNER, ]; $company_id = fn_get_runtime_company_id(); if (!empty($company_id)) { $params['company_id'] = $company_id; } elseif (!empty($user_id)) { $params['company_id'] = db_get_field('SELECT company_id FROM ?:users WHERE user_id = ?i', $user_id); } list($partners) = fn_get_users($params, Tygh::$app['session']['auth']); if (!empty($partners)) { foreach ($partners as $partner_data) { if ($partner_data['user_id'] != $user_id && $partner_data['referrer_partner_id'] != $user_id) { if (!empty($partner_data['firstname']) || !empty($partner_data['lastname'])) { $affiliates[$partner_data['user_id']] = implode(' ', [$partner_data['firstname'], $partner_data['lastname']]); } else { $affiliates[$partner_data['user_id']] = __('affiliate') . ' ' . $partner_data['user_id']; } if (!empty($partner_data['email'])) { $affiliates[$partner_data['user_id']] .= ' (' . $partner_data['email'] . ')'; } } } } return $affiliates; } function sd_Y2M3NTNiMDljNThiMmZkZWY1Y2FhOTY4($partners) { $affiliate_plans = []; if (!empty($partners)) { foreach ($partners as $partner) { if (!empty($partner['company_id'])) { $affiliate_plans[$partner['user_id']] = sd_ODJhMjFlOTZhMDc4YWEwMWRkODE2OTcx( DESCR_SL, ['company_id' => $partner['company_id']] ); } } } return $affiliate_plans; } function sd_Y2QyODU0ZjcyNjI2YTQ2MTlmMGZmYTJm() { $data = null; $data = [ 'plan_id' => 1, 'name' => __('sd_affiliate.default_customer_plan'), 'plan_type' => AffiliateUserTypes::CUSTOMER, 'description' => __('sd_affiliate.default_customer_plan_description'), 'payout_types' => [ 'sale' => [ 'value' => 25, 'value_type' => 'A', ], 'new_customer' => [ 'value' => 15, 'value_type' => 'A', ], 'new_partner' => [ 'value' => 50, 'value_type' => 'A', ], ], 'company_id' => fn_get_runtime_company_id(), ]; $data['payout_types'] = serialize($data['payout_types']); db_replace_into('affiliate_plans', $data); $plan_id = $data['plan_id']; if (!empty($plan_id)) { $_data = [ 'object' => $data['name'], 'description' => $data['description'], 'object_id' => $plan_id, 'object_holder' => 'affiliate_plans', ]; foreach (Languages::getAll() as $_data['lang_code'] => $_ldata) { db_query('INSERT INTO ?:common_descriptions ?e', $_data); } } if (fn_allowed_for('ULTIMATE')) { $sharing_data = [ 'share_company_id' => $data['company_id'], 'share_object_id' => 1, 'share_object_type' => 'affiliate_plans', ]; db_replace_into('ult_objects_sharing', $sharing_data); } } function fn_sd_affiliate_sd_buy_link_generate_link_post($product_id, &$buy_link, $prefix) { if (empty(Tygh::$app['session']['auth']['user_id'])) { return false; } $user_id = Tygh::$app['session']['auth']['user_id']; if (Tygh::$app['session']['auth']['user_type'] == 'P' && sd_Mzc5Y2M4OWVmNjZlYWU0NzA5ZDRkY2Ez($user_id)) { $buy_link .= $prefix . 'aff_id=' . $user_id; } return true; } function sd_NTYwMmVkMWZhNWQ0ZjYxNTMwY2RmZmRm($partner_id, $coupon_code) { if (!empty($partner_id) && !empty($coupon_code)) { if (Registry::get('addons.sd_affiliate.use_multiple_promotions') !== 'N') { $coupon_list = sd_ZTMyNGUyZTUwZDdhZmE4ODQzNTFmNGY4($partner_id); return in_array($coupon_code, $coupon_list); } else { $_coupon_code = db_get_field( 'SELECT coupon_code' . ' FROM ?:aff_partner_profiles' . ' WHERE user_id = ?i', $partner_id ); return $_coupon_code == $coupon_code; } } return false; } function sd_YTdmYjA2MWZmZDIzMjUyMDIwZWExY2Ji($action, $user_data) { $affiliate_usergroup_id = Registry::get('addons.sd_affiliate.affiliates_usergroup'); if (empty($affiliate_usergroup_id)) { fn_set_notification('N', __('notice'), __('sd_affiliate.user_group_not_assigned')); return false; } if (($action == 'add' || $action = 'update') && !empty($user_data['user_id']) && !empty($user_data['user_type']) && $user_data['user_type'] == AffiliateUserTypes::PARTNER ) { fn_change_usergroup_status('A', $user_data['user_id'], $affiliate_usergroup_id); } return true; } function sd_MDkxMTI4MDFkZWU1ZTBjNGFhYTA4YWU4($field_data) { $field_id = $field_data['field_id'] ?: db_get_field( 'SELECT field_id FROM ?:profile_fields' . ' ORDER BY field_id DESC LIMIT 1' ); db_query( 'UPDATE ?:profile_fields SET ?u WHERE field_id = ?i', ['partner_show' => $field_data['profile_show'], 'partner_required' => $field_data['profile_required']], $field_id ); } function fn_sd_affiliate_usergroup_types_get_map_user_type(&$map) { $map[AffiliateUserTypes::PARTNER] = AffiliateUserTypes::PARTNER; } function fn_sd_affiliate_usergroup_types_get_list(&$types) { $types[AffiliateUserGroupTypes::PARTNER_GROUP] = __('affiliate'); } function fn_sd_affiliate_define_usergroups($user_data, $area, &$usergroup_types) { if ($area === 'C' && $user_data['user_type'] === AffiliateUserTypes::PARTNER) { $usergroup_types[] = AffiliateUserTypes::PARTNER; } } 