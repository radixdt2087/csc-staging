<?php
 use Tygh\Registry; use Tygh\Enum\CommissionStatuses; use Tygh\Enum\AffiliateUserTypes; defined('BOOTSTRAP') or die('Access denied'); if ($mode == 'commissions') { fn_add_breadcrumb(__('affiliates_partnership'), 'affiliate_plans.list'); $payout_types = Registry::get('payout_types'); if ($auth['user_type'] == AffiliateUserTypes::CUSTOMER) { foreach ($payout_types as $p_type => $payout_type) { if (!in_array($p_type, ['sale', 'new_customer', 'new_partner'])) { unset($payout_types[$p_type]); } } } Tygh::$app['view']->assign('payout_types', $payout_types); $payout_options = []; foreach ($payout_types as $payout_id => $payout_data) { $payout_options[$payout_id] = __($payout_data['title']); } Tygh::$app['view']->assign('payout_options', $payout_options); $status_options = [ CommissionStatuses::APPROVED => __('approved'), CommissionStatuses::NOAPPROVED => __('awaiting_approval'), CommissionStatuses::PAIDUP => __('paidup'), ]; Tygh::$app['view']->assign('status_options', $status_options); Tygh::$app['session']['statistic_conditions'] = empty(Tygh::$app['session']['statistic_conditions']) ? [] : Tygh::$app['session']['statistic_conditions']; $statistic_conditions = &Tygh::$app['session']['statistic_conditions']; Tygh::$app['session']['statistic_search_data'] = empty(Tygh::$app['session']['statistic_search_data']) ? [] : Tygh::$app['session']['statistic_search_data']; $statistic_search_data = &Tygh::$app['session']['statistic_search_data']; if ($action == 'reset_search' || empty($statistic_conditions)) { $statistic_conditions = ' (amount != 0) '; $statistic_search_data = []; } $statistic_conditions = '1'; if (empty($_REQUEST['statistic_search'])) { $statistic_search = []; } else { $statistic_search = $_REQUEST['statistic_search']; } $statistic_search_data = (empty($search_type) || $search_type != 'add') ? $statistic_search : fn_array_merge($statistic_search_data, $statistic_search); if (AREA == 'C') { $statistic_conditions .= db_quote(' AND (actions.partner_id = ?i)', $auth['user_id']); } elseif (!empty($statistic_search_data['partner_id'])) { $statistic_conditions .= db_quote(' AND (actions.partner_id = ?i)', $statistic_search_data['partner_id']); } if (Registry::get('addons.sd_affiliate.show_only_approved_comissions') == 'Y') { $statistic_conditions .= db_quote(' AND actions.approved != ?s ', 'N'); } if (!empty($_REQUEST['period']) && $_REQUEST['period'] != 'A') { list($_REQUEST['time_from'], $_REQUEST['time_to']) = fn_create_periods($_REQUEST); $statistic_search_data['period'] = $_REQUEST['period']; if ($_REQUEST['period'] == 'C') { $statistic_search_data['start_date'] = $_REQUEST['time_from']; $statistic_search_data['end_date'] = $_REQUEST['time_to']; } $statistic_conditions .= db_quote( ' AND (actions.date >= ?i AND actions.date <= ?i)', $_REQUEST['time_from'], $_REQUEST['time_to'] ); } else { $statistic_search_data['period'] = 'A'; } if (!empty($statistic_search_data['plan_id'])) { $statistic_conditions .= db_quote(' AND (actions.plan_id = ?i) ', $statistic_search_data['plan_id']); } if (!empty($statistic_search_data['payout_id'])) { $_conditions = ''; foreach ($statistic_search_data['payout_id'] as $_act) { $_conditions .= (empty($_conditions) ? '' : 'OR') . db_quote(' (actions.action = ?s) ', $_act); } $statistic_conditions .= " AND ($_conditions) "; } if (!empty($statistic_search_data['status'])) { $_conditions = ''; foreach ($statistic_search_data['status'] as $_status) { $_conditions .= empty($_conditions) ? '' : 'OR'; if ($_status == CommissionStatuses::PAIDUP) { $_conditions .= ' (actions.payout_id != 0) '; } elseif ($_status == CommissionStatuses::APPROVED) { $_conditions .= " (actions.payout_id = 0 AND actions.approved = 'Y') "; } else { $_conditions .= " (actions.approved = 'N' AND payout_id = 0) "; } } $statistic_conditions .= " AND ($_conditions) "; } if (empty($statistic_search_data['zero_actions'])) { $statistic_conditions .= db_quote(' AND actions.amount != ?d ', 0); } $statistic_search_data['amount_from'] = empty($statistic_search_data['amount_from']) ? 0 : floatval($statistic_search_data['amount_from']); if (!empty($statistic_search_data['amount_from'])) { $statistic_conditions .= db_quote( ' AND (actions.amount >= ?d) ', fn_convert_price($statistic_search_data['amount_from']) ); } $statistic_search_data['amount_to'] = empty($statistic_search_data['amount_to']) ? 0 : floatval($statistic_search_data['amount_to']); if (!empty($statistic_search_data['amount_to'])) { $statistic_conditions .= db_quote( ' AND (actions.amount <= ?d) ', fn_convert_price($statistic_search_data['amount_to']) ); } Tygh::$app['view']->assign('statistic_search', $statistic_search_data); if ($auth['user_type'] == AffiliateUserTypes::CUSTOMER) { $general_stats = db_get_hash_array( 'SELECT action, COUNT(action) as count, SUM(amount) as sum, AVG(amount) as avg,' . ' COUNT(distinct partner_id) as partners' . ' FROM ?:aff_customer_actions as actions' . ' WHERE ?p GROUP BY action', 'action', $statistic_conditions ); $general_stats['total'] = db_get_row( 'SELECT ?s as action, COUNT(action) as count, SUM(amount) as sum, AVG(amount) as avg,' . ' COUNT(distinct partner_id) as partners' . ' FROM ?:aff_customer_actions as actions' . ' WHERE ?p', 'total', $statistic_conditions ); } else { $general_stats = db_get_hash_array( 'SELECT action, COUNT(action) as count, SUM(amount) as sum, AVG(amount) as avg,' . ' COUNT(distinct partner_id) as partners' . ' FROM ?:aff_partner_actions as actions' . ' WHERE ?p GROUP BY action', 'action', $statistic_conditions ); $general_stats['total'] = db_get_row( 'SELECT ?s as action, COUNT(action) as count, SUM(amount) as sum, AVG(amount) as avg,' . ' COUNT(distinct partner_id) as partners' . ' FROM ?:aff_partner_actions as actions' . ' WHERE ?p', 'total', $statistic_conditions ); } Tygh::$app['view']->assign('general_stats', $general_stats); $additional_stats = []; $additional_stats['click_vs_show'] = empty($general_stats['show']['count']) ? '---' : (empty($general_stats['click']['count']) ? '0' : round($general_stats['click']['count'] / $general_stats['show']['count'] * 100, 1) . '% (' . intval($general_stats['click']['count']) . '/' . intval($general_stats['show']['count']) . ')'); $additional_stats['sale_vs_click'] = empty($general_stats['click']['count']) ? '---' : (empty($general_stats['sale']['count']) ? '0' : round($general_stats['sale']['count'] / $general_stats['click']['count'] * 100, 1) . '% (' . intval($general_stats['sale']['count']) . '/' . intval($general_stats['click']['count']) . ')'); Tygh::$app['view']->assign('additional_stats', $additional_stats); $list_plans = sd_ODJhMjFlOTZhMDc4YWEwMWRkODE2OTcx(); Tygh::$app['view']->assign('list_plans', $list_plans); Tygh::$app['view']->assign('affiliate_plan', sd_OTljYTYwM2ExM2Q5MjM3MzAwNzA0NDYw($auth['user_id'])); $params = $_REQUEST; $params['user_type'] = $auth['user_type']; $params['condition'] = Tygh::$app['session']['statistic_conditions']; list($list_stats, $search) = sd_MmMxMDg1NjBmYjhlY2NhZjA0M2ZmY2Q4( $params, Registry::get('settings.Appearance.elements_per_page') ); Tygh::$app['view']->assign('search', $search); Tygh::$app['view']->assign('list_stats', $list_stats); $order_status_descr = fn_get_simple_statuses(STATUSES_ORDER, true, true); Tygh::$app['view']->assign('order_status_descr', $order_status_descr); } 