<?php
 use Phinx\Migration\AbstractMigration; class AddonsSdAffiliateAndReferralInsertGroupForPartnersSettings extends AbstractMigration { public function up() { $options = $this->adapter->getOptions(); $this->prefix = $options['prefix']; $addon = $this->fetchRow( "SELECT addon FROM {$this->prefix}addons" . " WHERE addon = '{$this->addon_id}'" ); if (empty($addon)) { return; } $settings = [ [ 'settings_params' => [ 'section_tab' => 'general', 'langs' => [ 'value' => [ 'en' => 'User group for affiliates', 'ru' => 'Группа пользователей для партнеров' ], ] ], 'settings_object' => [ 'edition_type' => 'ROOT', 'name' => 'affiliates_usergroup', 'section_id' => null, 'section_tab_id' => null, 'type' => 'C', 'value' => 'N', 'position' => '520', 'is_global' => 'N', 'handler' => '', 'parent_id' => '0' ] ], [ 'settings_params' => [ 'section_tab' => 'general', 'langs' => [ 'value' => [ 'en' => 'Auto assign group for affiliates', 'ru' => 'Автоматически назначать группу партнеров для новых партнеров' ], ], ], 'settings_object' => [ 'edition_type' => 'ROOT', 'name' => 'auto_assign_affiliates_usergroup', 'section_id' => null, 'section_tab_id' => null, 'type' => 'C', 'value' => 'N', 'position' => '530', 'is_global' => 'N', 'handler' => '', 'parent_id' => '0' ] ], [ 'settings_params' => [ 'section_tab' => 'general', 'langs' => [ 'value' => [ 'en' => 'Affiliate user group', 'ru' => 'Группы пользователей для партнёров' ] ], ], 'settings_object' => [ 'edition_type' => 'ROOT', 'name' => 'affiliate_user_group_title', 'section_id' => null, 'section_tab_id' => null, 'type' => 'C', 'value' => 'N', 'position' => '540', 'is_global' => 'N', 'handler' => '', 'parent_id' => '0' ], ] ]; foreach ($settings as $setting) { $this->createSetting($setting['settings_params'], $setting['settings_object']); } } public function down() { } protected function createSetting($setting_params, $setting_object) { $addon_section = $this->fetchRow( "SELECT section_id FROM {$this->prefix}settings_sections" . " WHERE name = '{$this->addon_id}' AND type = 'ADDON'" ); if (!empty($addon_section['section_id'])) { $section_id = $addon_section['section_id']; $setting = $this->getSettingObject( $section_id, $setting_object['name'] ); if (empty($setting)) { $tab_name = $setting_params['section_tab']; $tab = $this->fetchRow( "SELECT * FROM {$this->prefix}settings_sections" . " WHERE parent_id = {$section_id} AND name = '{$tab_name}' AND type = 'TAB'" ); $setting_object['section_id'] = $section_id; $setting_object['section_tab_id'] = $tab['section_id']; $this->createSettingObject($setting_params, $setting_object); } } } protected function getSettingObject($section_id, $section_name) { return $this->fetchRow( "SELECT * FROM {$this->prefix}settings_objects" . " WHERE section_id = {$section_id} AND name = '{$section_name}'" ); } protected function createSettingObject($setting_params, $setting_object) { list($fields, $values) = $this->prepareForInsert($setting_object); $this->execute("INSERT INTO {$this->prefix}settings_objects ({$fields}) VALUES ({$values})"); $setting_object = $this->getSettingObject( $setting_object['section_id'], $setting_object['name'] ); if (!empty($setting_params['langs'])) { $languages = $this->fetchAll( "SELECT lang_code FROM {$this->prefix}languages" ); foreach ($languages as $lang) { $lang_code = $lang['lang_code']; if (!empty($setting_params['langs']['value'][$lang_code])) { $name = $setting_params['langs']['value'][$lang_code]; } else { $name = reset($setting_params['langs']['value']); } $data = [ 'object_id' => $setting_object['object_id'], 'object_type' => 'O', 'lang_code' => $lang_code, 'value' => $name, ]; list($fields, $values) = $this->prepareForInsert($data); $this->execute("INSERT INTO {$this->prefix}settings_descriptions ({$fields}) VALUES ({$values})"); } } } protected function prepareForInsert($data) { $data = array_map('addslashes', $data); $fields = implode(', ', array_keys($data)); $values = sprintf("'%s'", implode("', '", $data)); return [$fields, $values]; } } 