<?php
 use Phinx\Migration\AbstractMigration; class AddonsSdAffiliateAndReferralChangeLangvarAddonsSdAffiliateInvitationToBecomeSuperAffiliate extends AbstractMigration { public function up() { $options = $this->adapter->getOptions(); $this->prefix = $options['prefix']; $langvars = [ 'addons.sd_affiliate.invitation_to_become_super_affiliate' => [ 'en' => '<p>You can become a pro affiliate and get commissions <b>in cash</b> for text, product and graphic banners, as well as multi tiers affiliates and used coupons.</p>[link]', 'ru' => '<p>Вы можете стать профессиональным партнером и получать комиссионные <b>наличными</b> за текстовые, товарные и графические баннеры, а также за многоуровневые партнерские программы и использованные купоны.</p>[link]', 'da' => '<p>Du kan blive proffeselskab og få provisioner <b>kontant</b> til tekst-, produkt- og grafiske bannere samt tilknyttede multi-tiers tilknyttede og brugte kuponer.</p>[link]', 'de' => '<p>Sie können ein Pro-Partner werden und Provisionen <b>in bar</ b> für Text-, Produkt- und Grafikbanner sowie für mehrstufige Partner und gebrauchte Gutscheine erhalten.</p>[link]', 'el' => '<p>Μπορείτε να γίνετε επαγγελματίας συνεργάτης και να λάβετε προμήθειες <b>σε μετρητά</b> για πανό κειμένου, προϊόντων και γραφικών, καθώς και θυγατρικών πολλαπλών επιπέδων και μεταχειρισμένων κουπονιών.</p>[link]', 'es' => '<p>Puede convertirse en un afiliado profesional y obtener comisiones <b>en efectivo</b> por banners de texto, productos y gráficos, así como afiliados de varios niveles y cupones usados.</p>[link]', 'fr' => "<p>Vous pouvez devenir un affilié professionnel et obtenir des commissions <b>en espèces</b> pour les bannières textuelles, produits et graphiques, ainsi que pour les affiliés multi-niveaux et les coupons utilisés.</p>[link]", 'it' => '<p>Puoi diventare un affiliato professionista e ottenere commissioni <b>in contanti</b> per banner di testo, prodotti e grafici, nonché affiliati multilivello e coupon usati.</p>[link]', 'nl' => '<p>U kunt een professionele partner worden en commissies <b>in contanten</b> ontvangen voor tekst-, product- en grafische banners, evenals gelieerde ondernemingen met meerdere niveaus en gebruikte kortingsbonnen.</p>[link]', 'no' => '<p>Du kan bli et profesjonelt tilknyttet selskap og få provisjoner <b>i kontanter</b> for tekst-, produkt- og grafiske bannere, samt tilknyttede filialer og brukte kuponger.</p>[link]', 'ro' => '<p>Puteți deveni un afiliat profesionist și puteți primi comisioane <b>în numerar</b> pentru bannere text, produse și grafice, precum și pentru afiliați pe mai multe niveluri și cupoane utilizate.</p>[link]' ], ]; $this->addOrUpdateLangvars($langvars); } public function down() { } protected function addOrUpdateLangvars($langvars) { foreach ($langvars as $langvar_name => $langvar_values) { foreach ($langvar_values as $lang_code => $langvar_value) { $data = [ 'lang_code' => $lang_code, 'name' => $langvar_name, 'value' => $langvar_value ]; $value = $this->fetchRow( "SELECT value FROM {$this->prefix}language_values" . " WHERE name = '{$data['name']}' AND lang_code = '{$data['lang_code']}'" ); if (empty($value)) { list($fields, $values) = $this->prepareForInsert($data); $this->execute("INSERT INTO {$this->prefix}language_values ({$fields}) VALUES ({$values})"); } else { $this->execute("UPDATE {$this->prefix}language_values" . " SET value = '{$data['value']}'" . " WHERE name = '{$data['name']}' AND lang_code = '{$data['lang_code']}'"); } } } } protected function prepareForInsert($data) { $data = array_map('addslashes', $data); $fields = implode(', ', array_keys($data)); $values = sprintf("'%s'", implode("', '", $data)); return [$fields, $values]; } } 